{
	"info": {
		"_postman_id": "c291d6f8-8c87-44f0-b2b2-1382ac7c9f35",
		"name": "API_Project_Brevo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24228769"
	},
	"item": [
		{
			"name": "Sales CRM",
			"item": [
				{
					"name": "Companies",
					"item": [
						{
							"name": "Get all Companies",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.items);\r",
											"console.log(jsonData.pager);\r",
											"\r",
											"// Verify the value of pager limit\r",
											"pm.test(\"The value of pager limit\", function () {\r",
											"    pm.expect(jsonData.pager.limit).to.eql(50);\r",
											"});\r",
											"\r",
											"// Verify that body response includes industry string\r",
											"pm.test(\"Body response includes industry string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"industry\");\r",
											"});\r",
											"// Verify that body response includes attributes string\r",
											"pm.test(\"Body response includes attributes string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"attributes\");\r",
											"});\r",
											"// Verify that body response includes linkedContacts string\r",
											"pm.test(\"Body response includes linkedContacts string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"linkedContacts\");\r",
											"});\r",
											"// Verify that body response includes linkedContactsIds string\r",
											"pm.test(\"Body response includes linkedContactsIds string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"linkedContactsIds\");\r",
											"});\r",
											"// Verify that body response includes linkedDealsIds string\r",
											"pm.test(\"Body response includes linkedDealsIds string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"linkedDealsIds\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "0aea45f4-83a4-4c95-861f-68c66169e771"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies"
									],
									"query": [
										{
											"key": "filters",
											"value": "veniam elit in",
											"description": "Filter by attrbutes. If you have filter for owner on your side please send it as {\"attributes.owner\":\"6299dcf3874a14eacbc65c46\"}",
											"disabled": true
										},
										{
											"key": "linkedContactsIds",
											"value": "13396752",
											"description": "Filter by linked contacts ids",
											"disabled": true
										},
										{
											"key": "linkedDealsIds",
											"value": "veniam elit in",
											"description": "Filter by linked Deals ids",
											"disabled": true
										},
										{
											"key": "page",
											"value": "13396752",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "13396752",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "veniam elit in",
											"description": "The field used to sort field names.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns companies list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies?filters=veniam elit in&linkedContactsIds=13396752&linkedDealsIds=veniam elit in&page=13396752&limit=13396752&sort=desc&sortBy=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "filters",
													"value": "veniam elit in"
												},
												{
													"key": "linkedContactsIds",
													"value": "13396752"
												},
												{
													"key": "linkedDealsIds",
													"value": "veniam elit in"
												},
												{
													"key": "page",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n        \"domain\": \"xyz\",\n        \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n        \"name\": \"text\",\n        \"number_of_contacts\": 0,\n        \"owner\": \"62260474111b1101704a9d85\",\n        \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n        \"phone_number\": 8171844192,\n        \"revenue\": 10\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedDealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n        \"domain\": \"xyz\",\n        \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n        \"name\": \"text\",\n        \"number_of_contacts\": 0,\n        \"owner\": \"62260474111b1101704a9d85\",\n        \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n        \"phone_number\": 8171844192,\n        \"revenue\": 10\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedDealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies?filters=veniam elit in&linkedContactsIds=13396752&linkedDealsIds=veniam elit in&page=13396752&limit=13396752&sort=desc&sortBy=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "filters",
													"value": "veniam elit in"
												},
												{
													"key": "linkedContactsIds",
													"value": "13396752"
												},
												{
													"key": "linkedDealsIds",
													"value": "veniam elit in"
												},
												{
													"key": "page",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body response includes id string\r",
											"pm.test(\"Body response includes id string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Length is present in headers\r",
											"pm.test(\"Content-Length is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"companyId\", jsonData.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "f48a8c3b-97cc-4a7a-bb4c-06a3a907ff7b"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "8aa76841-5640-4a04-bab5-ee211c6af6d3"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{$randomCompanyName}}\",\n  \"attributes\": {\n    \"domain\": \"https://{{$randomFirstName}}.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"{{ownerId}}\"\n  }\n//  \"countryCode\": 91\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies"
									]
								}
							},
							"response": [
								{
									"name": "Created new Company",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"60e68d60582a3b006f524197\"\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"60e68d60582a3b006f524197\"\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get company attributes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes required string\r",
											"pm.test(\"Body response includes required string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"required\");\r",
											"});\r",
											"// Verify that body response includes label string\r",
											"pm.test(\"Body response includes label string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"label\");\r",
											"});\r",
											"// Verify that body response includes attributeOptions string\r",
											"pm.test(\"Body response includes attributeOptions string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"attributeOptions\");\r",
											"});\r",
											"// Verify that body response includes attributeTypeName string\r",
											"pm.test(\"Body response includes attributeTypeName string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"attributeTypeName\");\r",
											"});\r",
											"// Verify that body response includes internalName string\r",
											"pm.test(\"Body response includes internalName string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"internalName\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "1765a95c-43a1-4ac1-b902-7f567bb25f72"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"attributes"
									]
								}
							},
							"response": [
								{
									"name": "Returns list of company attributes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"attributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"internalName\": \"name\",\n    \"label\": \"Company Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  },\n  {\n    \"internalName\": \"name\",\n    \"label\": \"Company Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  }\n]"
								}
							]
						},
						{
							"name": "Get a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.attributes);\r",
											"\r",
											"// Verify the value of company domain\r",
											"pm.test(\"Test for company domain value\", function () {\r",
											"    pm.expect(jsonData.attributes.domain).to.eql(\"https://example.com\");\r",
											"});\r",
											"// Verify the value of company industry\r",
											"pm.test(\"Test for company industry value\", function () {\r",
											"    pm.expect(jsonData.attributes.industry).to.eql(\"Fabric\");\r",
											"});\r",
											"// Verify the company name\r",
											"pm.test(\"Test for company name\", function () {\r",
											"    pm.expect(jsonData.attributes.name).to.eql(\"company\");\r",
											"});\r",
											"\r",
											"// Verify that body response includes linkedContactsIds string\r",
											"pm.test(\"Body response includes linkedContactsIds string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"linkedContactsIds\");\r",
											"});\r",
											"// Verify that body response includes createdBy string\r",
											"pm.test(\"Body response includes createdBy string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"createdBy\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "081e931a-47a5-4107-a9e2-b25dfb606693"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6632c6b60d80fe94af2710b4",
											"description": "(Required) Get Company Details",
											"uuid": "4a80f188-5a5d-4b9e-a9bd-81305dff8803"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the Company",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n    \"domain\": \"xyz\",\n    \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n    \"name\": \"text\",\n    \"number_of_contacts\": 0,\n    \"owner\": \"62260474111b1101704a9d85\",\n    \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n    \"phone_number\": 8171844192,\n    \"revenue\": 10\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route company id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Link and Unlink company with contact and deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "04111b11-0579-45c9-b048-8beaac7fd50b"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "a29e6c32-4b6c-43a5-896f-bc4b0e60f3ca"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"linkContactIds\": [\n    1\n  ],/*\n  \"unlinkContactIds\": [\n    1\n  ],*/\n  \"linkDealsIds\": [\n    \"6632a113d8ccc2aafe650116\"\n  ]/*,\n  \"unlinkDealsIds\": [\n    \"6632a113d8ccc2aafe650116\"\n  ] */\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies/link-unlink/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"link-unlink",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "663380ef8a082c773b9dd539",
											"description": "(Required) ",
											"uuid": "ddf9eb1a-45d2-40a6-a24d-3c255b460bbb"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully linked/unlinked contacts/deals with the company.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkDealsIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when query params are invalid or invalid data provided in request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkDealsIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Update a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "0d8a04e0-d434-4e3d-8a26-919e258aa95c"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "cac6ebdd-4510-4d21-a422-43c27a9fecae"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Company\",\n  \"attributes\": {\n    \"domain\": \"https://fabricco.com\",\n    \"industry\": \"fabric\",\n    \"owner\": \"{{ownerId}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{companyId}}",
											"description": "(Required) ",
											"uuid": "00f9dcd8-20f3-48a2-be19-f550d5f0609c"
										}
									]
								}
							},
							"response": [
								{
									"name": "Company updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n    \"domain\": \"xyz\",\n    \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n    \"name\": \"text\",\n    \"number_of_contacts\": 0,\n    \"owner\": \"62260474111b1101704a9d85\",\n    \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n    \"phone_number\": 8171844192,\n    \"revenue\": 10\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when company id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "c6165ffd-4993-4d76-8858-a8d9a375d168"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{companyId}}",
											"description": "(Required) Company ID to delete",
											"uuid": "b3877431-7d32-4b88-8c1d-8e63e4687abc"
										}
									]
								}
							},
							"response": [
								{
									"name": "When company deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route company id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Get pipeline stages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify the value of pipeline\r",
											"pm.test(\"Verify the pipeline value\", function () {\r",
											"    pm.expect(jsonData.pipeline).to.eql(\"6632a09e2b17518615677ab7\");\r",
											"});\r",
											"// Verify the pipeline name\r",
											"pm.test(\"Verify the pipeline name\", function () {\r",
											"    pm.expect(jsonData.pipeline_name).to.eql(\"Deals Pipeline\");\r",
											"});\r",
											"\r",
											"// Verify that body response includes pipeline attribute\r",
											"pm.test(\"Body response includes pipeline attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"pipeline\");\r",
											"});\r",
											"// Verify that body response includes pipeline_name attribute\r",
											"pm.test(\"Body response includes pipeline_name attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"pipeline_name\");\r",
											"});\r",
											"// Verify that body response includes Deals Pipeline string\r",
											"pm.test(\"Body response includes Deals Pipeline string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Deals Pipeline\");\r",
											"});\r",
											"// Verify that body response includes New string\r",
											"pm.test(\"Body response includes New string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"New\");\r",
											"});\r",
											"// Verify that body response includes Qualifying string\r",
											"pm.test(\"Body response includes Qualifying string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Qualifying\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "7dd2f71a-ef95-49c7-bd60-3cd20e5e3f9b"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/pipeline/details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"pipeline",
										"details"
									]
								}
							},
							"response": [
								{
									"name": "Returns list of pipeline stages",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/pipeline/details",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"pipeline",
												"details"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"stages\": [\n    {\n      \"id\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n      \"name\": \"New\"\n    },\n    {\n      \"id\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n      \"name\": \"New\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Deals",
					"item": [
						{
							"name": "Get all deals",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.pager);\r",
											"\r",
											"// Verify the value of pager limit\r",
											"pm.test(\"The value of pager limit\", function () {\r",
											"    pm.expect(jsonData.pager.limit).to.eql(50);\r",
											"});\r",
											"\r",
											"// Verify that body response includes deal id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes deal_name attribute\r",
											"pm.test(\"Body response includes deal_name attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"deal_name\");\r",
											"});\r",
											"// Verify that body response includes deal_owner attribute\r",
											"pm.test(\"Body response includes deal_owner attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"deal_owner\");\r",
											"});\r",
											"// Verify that body response includes linkedContactsIds attribute\r",
											"pm.test(\"Body response includes linkedContactsIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"linkedContactsIds\");\r",
											"});\r",
											"// Verify that body response includes linkedCompaniesIds attribute\r",
											"pm.test(\"Body response includes linkedCompaniesIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"linkedCompaniesIds\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "0b3ec897-ae6b-4bc5-807e-43378c70d7ff"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals"
									],
									"query": [
										{
											"key": "filter[attributes]",
											"value": "veniam elit in",
											"description": "Filter by attrbutes. If you have filter for owner on your side please send it as `attributes.owner`.\"",
											"disabled": true
										},
										{
											"key": "filter[linkedCompaniesIds]",
											"value": "veniam elit in",
											"description": "Filter by linked companies ids",
											"disabled": true
										},
										{
											"key": "filter[linkedContactsIds]",
											"value": "veniam elit in",
											"description": "Filter by linked companies ids",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "13396752",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "13396752",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns deals list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals?filter[attributes]=veniam elit in&filter[linkedCompaniesIds]=veniam elit in&filter[linkedContactsIds]=veniam elit in&offset=13396752&limit=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											],
											"query": [
												{
													"key": "filter[attributes]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedCompaniesIds]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedContactsIds]",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"deal_name\": \"testname\",\n        \"deal_owner\": \"6093d2425a9b436e9519d034\",\n        \"amount\": 12,\n        \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n        \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n        \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n        \"created_at\": \"2022-05-30T07:42:05.671Z\",\n        \"number_of_contacts\": 1,\n        \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n        \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n        \"next_activity_date\": null,\n        \"number_of_activities\": 0\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedCompaniesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"deal_name\": \"testname\",\n        \"deal_owner\": \"6093d2425a9b436e9519d034\",\n        \"amount\": 12,\n        \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n        \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n        \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n        \"created_at\": \"2022-05-30T07:42:05.671Z\",\n        \"number_of_contacts\": 1,\n        \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n        \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n        \"next_activity_date\": null,\n        \"number_of_activities\": 0\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedCompaniesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals?filter[attributes]=veniam elit in&filter[linkedCompaniesIds]=veniam elit in&filter[linkedContactsIds]=veniam elit in&offset=13396752&limit=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											],
											"query": [
												{
													"key": "filter[attributes]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedCompaniesIds]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedContactsIds]",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body response includes id string\r",
											"pm.test(\"Body response includes id string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Length is present in headers\r",
											"pm.test(\"Content-Length is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"dealId\", jsonData.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "a17247ad-5db0-424a-8aa4-5ddba9ca8ec8"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "020fa5db-0331-4aff-9549-7801afc42e7f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Deal: Connect with {{$randomCompanyName}}\",\n  \"attributes\": {\n    \"deal_owner\": \"{{ownerId}}\",\n    \"amount\": 1200\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals"
									]
								}
							},
							"response": [
								{
									"name": "Created new Deal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with company\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with company\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.attributes);\r",
											"\r",
											"// Verify the deal name\r",
											"pm.test(\"Test for deal_name\", function () {\r",
											"    pm.expect(jsonData.attributes.deal_name).to.eql(\"Company Inc - Amber Ozenogu\");\r",
											"});\r",
											"// Verify the value of deal amount\r",
											"pm.test(\"Test for deal amount value\", function () {\r",
											"    pm.expect(jsonData.attributes.amount).to.eql(1000);\r",
											"});\r",
											"// Verify the date the deal was created\r",
											"pm.test(\"Test for deal creation date\", function () {\r",
											"    pm.expect(jsonData.attributes.created_at).to.eql(\"2024-05-01T20:07:47Z\");\r",
											"});\r",
											"\r",
											"// Verify that body response includes linkedCompaniesIds attribute\r",
											"pm.test(\"Body response includes linkedCompaniesIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"linkedCompaniesIds\");\r",
											"});\r",
											"// Verify that body response includes createdBy attribute\r",
											"pm.test(\"Body response includes createdBy attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"createdBy\");\r",
											"});\r",
											"// Verify that body response includes linkedContactsIds attribute\r",
											"pm.test(\"Body response includes linkedContactsIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"linkedContactsIds\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "06875d64-3a8d-4ec3-b797-f2b607924c7d"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6632a113d8ccc2aafe650116",
											"description": "(Required) ",
											"uuid": "6ca396f2-d626-495f-a538-605713b8cc8a"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the deal by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"deal_name\": \"testname\",\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12,\n    \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n    \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n    \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n    \"created_at\": \"2022-05-30T07:42:05.671Z\",\n    \"number_of_contacts\": 1,\n    \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n    \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n    \"next_activity_date\": null,\n    \"number_of_activities\": 0\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedCompaniesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when task id is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Link and Unlink a deal with contacts and companies",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "041f6099-1a9b-41e2-b094-cbee64dcadd8"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "193220fb-a2e9-454d-9974-1a81da8fb697"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"linkContactIds\": [\n    3\n  ],\n  \"linkCompanyIds\": [\n    \"6633838a47833521fb4660ec\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										"link-unlink",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "663394dda3602a4b397a269e",
											"description": "(Required) ",
											"uuid": "403a2b4b-efed-4fd6-9d89-b58fe8e318da"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully linked/unlinked contacts/companies with the deal.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkCompanyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkCompanyIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when query params are invalid or invalid data provided in request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkCompanyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkCompanyIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get deal attributes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes internalName string\r",
											"pm.test(\"Body response includes internalName string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"internalName\");\r",
											"});\r",
											"// Verify that body response includes label string\r",
											"pm.test(\"Body response includes label string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"label\");\r",
											"});\r",
											"// Verify that body response includes attributeOptions string\r",
											"pm.test(\"Body response includes attributeOptions string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"attributeOptions\");\r",
											"});\r",
											"// Verify that body response includes attributeTypeName string\r",
											"pm.test(\"Body response includes attributeTypeName string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"attributeTypeName\");\r",
											"});\r",
											"// Verify that body response includes isRequired string\r",
											"pm.test(\"Body response includes isRequired string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"isRequired\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "4e989534-8233-4ead-bcb0-dc6fec4210e4"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/attributes/deals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"attributes",
										"deals"
									]
								}
							},
							"response": [
								{
									"name": "Returns list of deal attributes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/attributes/deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"attributes",
												"deals"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"internalName\": \"deal_name\",\n    \"label\": \"Deal Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  },\n  {\n    \"internalName\": \"deal_name\",\n    \"label\": \"Deal Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  }\n]"
								}
							]
						},
						{
							"name": "Update a deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "32d89c8c-f773-4cc1-8a4e-ea4ebd2be455"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "75bc1b3e-ef9e-4074-9d4e-e0df7e408f8b"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"{{ownerId}}\",\n    \"amount\": 1200\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{dealId}}",
											"description": "(Required) ",
											"uuid": "37618f1b-0cbc-4b51-80d5-8cc9ac0305b9"
										}
									]
								}
							},
							"response": [
								{
									"name": "Deal updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when deal id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "d02636a0-29fa-4bc2-816b-fb3eb2eb83c3"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{dealId}}",
											"description": "(Required) ",
											"uuid": "bee62b6a-9f11-479d-aeb3-a5872652e7ab"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when deal id is not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Tasks",
					"item": [
						{
							"name": "Get all tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.pager);\r",
											"\r",
											"// Verify the value of pager limit\r",
											"pm.test(\"The value of pager limit\", function () {\r",
											"    pm.expect(jsonData.pager.limit).to.eql(50);\r",
											"});\r",
											"\r",
											"// Verify that body response includes task id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes taskTypeId attribute\r",
											"pm.test(\"Body response includes taskTypeId attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"taskTypeId\");\r",
											"});\r",
											"// Verify that body response includes name attribute\r",
											"pm.test(\"Body response includes name attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"name\");\r",
											"});\r",
											"// Verify that body response includes contactsIds attribute\r",
											"pm.test(\"Body response includes contactsIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"contactsIds\");\r",
											"});\r",
											"// Verify that body response includes dealsIds attribute\r",
											"pm.test(\"Body response includes dealsIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"dealsIds\");\r",
											"});\r",
											"// Verify that body response includes companiesIds attribute\r",
											"pm.test(\"Body response includes companiesIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"companiesIds\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "d0c1b504-f543-4987-b056-b00875201058"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "veniam elit in",
											"description": "Filter by task type (ID)",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "done",
											"description": "Filter by task status",
											"disabled": true
										},
										{
											"key": "filter[date]",
											"value": "range",
											"description": "Filter by date",
											"disabled": true
										},
										{
											"key": "filter[assignTo]",
											"value": "veniam elit in",
											"description": "Filter by assignTo id",
											"disabled": true
										},
										{
											"key": "filter[contacts]",
											"value": "veniam elit in",
											"description": "Filter by contact ids",
											"disabled": true
										},
										{
											"key": "filter[deals]",
											"value": "veniam elit in",
											"description": "Filter by deals ids",
											"disabled": true
										},
										{
											"key": "filter[companies]",
											"value": "veniam elit in",
											"description": "Filter by companies ids",
											"disabled": true
										},
										{
											"key": "dateFrom",
											"value": "-41398727",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "dateTo",
											"value": "-41398727",
											"description": "dateTo to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "13396752",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "name",
											"description": "The field used to sort field names.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns task list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks?filter[type]=veniam elit in&filter[status]=done&filter[date]=range&filter[assignTo]=veniam elit in&filter[contacts]=veniam elit in&filter[deals]=veniam elit in&filter[companies]=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc&sortBy=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											],
											"query": [
												{
													"key": "filter[type]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[status]",
													"value": "done"
												},
												{
													"key": "filter[date]",
													"value": "range"
												},
												{
													"key": "filter[assignTo]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[contacts]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[deals]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[companies]",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n      \"name\": \"Task: Connect with client\",\n      \"id\": \"61a5cd07ca1347c82306ad06\",\n      \"contactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"dealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ],\n      \"companiesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n      \"name\": \"Task: Connect with client\",\n      \"id\": \"61a5cd07ca1347c82306ad06\",\n      \"contactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"dealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ],\n      \"companiesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks?filter[type]=veniam elit in&filter[status]=done&filter[date]=range&filter[assignTo]=veniam elit in&filter[contacts]=veniam elit in&filter[deals]=veniam elit in&filter[companies]=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc&sortBy=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											],
											"query": [
												{
													"key": "filter[type]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[status]",
													"value": "done"
												},
												{
													"key": "filter[date]",
													"value": "range"
												},
												{
													"key": "filter[assignTo]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[contacts]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[deals]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[companies]",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "name"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get all task types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes title\r",
											"pm.test(\"Body response includes title attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"title\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "9cbd1733-9df3-477d-9bbe-bad0b4b8bad2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasktypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasktypes"
									]
								}
							},
							"response": [
								{
									"name": "Returns all the Task types",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasktypes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasktypes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a88a2eb7a574180261234\",\n  \"title\": \"Email\"\n}"
								}
							]
						},
						{
							"name": "Create a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body response includes id attribute\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes priority attribute\r",
											"pm.test(\"Body response includes priority attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"priority\");\r",
											"});\r",
											"\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"taskId\", jsonData.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "ae9cd25f-3675-4e5e-91b8-2148e0532c04"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "68cfe015-5368-4a1c-96a4-d94d600a82c4"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"TO DO\",\n  \"taskTypeId\": \"662f7f459586446152859bcd\",\n  \"date\": \"2024-05-12T14:00:00+01:00\",\n  \"duration\": 600000,\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"{{ownerId}}\",\n  \"reminder\": {\n    \"value\": 3,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks"
									]
								}
							},
							"response": [
								{
									"name": "Created new task",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"duration\": 600000,\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"duration\": 600000,\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify the TypeId of the task\r",
											"pm.test(\"Test for task Type Id\", function () {\r",
											"    pm.expect(jsonData.taskTypeId).to.eql(\"662f7f459586446152859bcd\");\r",
											"});\r",
											"// Verify the name of the task\r",
											"pm.test(\"Test for task name\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(\"To do\");\r",
											"});\r",
											"// Verify the priority of the task\r",
											"pm.test(\"Test for task priority value\", function () {\r",
											"    pm.expect(jsonData.priority).to.eql(false);\r",
											"});\r",
											"// Verify the date the task was created\r",
											"pm.test(\"Test for deal creation date\", function () {\r",
											"    pm.expect(jsonData.createdAt).to.eql(\"2024-05-01T20:07:48.289Z\");\r",
											"});\r",
											"// Verify that body response includes companiesIds attribute\r",
											"pm.test(\"Body response includes companiesIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"companiesIds\");\r",
											"});\r",
											"// Verify that body response includes createdAt attribute\r",
											"pm.test(\"Body response includes createdAt attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
											"});\r",
											"// Verify that body response includes contactsIds attribute\r",
											"pm.test(\"Body response includes contactsIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"contactsIds\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "bd41da85-e8d9-41b4-b05c-a00363e440ba"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6632a11496005975489897f2",
											"description": "(Required) ",
											"uuid": "016e4c49-a745-4519-8bfd-4cf82302cec7"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the Task by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"name\": \"Task: Connect with client\",\n  \"id\": \"61a5cd07ca1347c82306ad06\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when task id is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "1930048d-0a38-4c19-a638-bbece75f2723"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "af879399-1126-4e0d-a903-d2bb63e94989"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 60000,\n  \"taskTypeId\": \"662f7f459586446152859bd0\",\n  \"date\": \"2024-05-18T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": true,\n  \"assignToId\": \"{{ownerId}}\",\n  \"reminder\": {\n    \"value\": 1,\n    \"unit\": \"minutes\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{taskId}}",
											"description": "(Required) ",
											"uuid": "53b29e8f-0541-4572-8441-d81dc999dcba"
										}
									]
								}
							},
							"response": [
								{
									"name": "Task updated succussfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when task id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "a4884cd4-6ff5-4862-870b-f377bb1c24ff"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{taskId}}",
											"description": "(Required) ",
											"uuid": "76ea8805-16ce-44b5-9135-8e06f503e3ca"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when task id is not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Notes",
					"item": [
						{
							"name": "Get all notes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes task id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes text string\r",
											"pm.test(\"Body response includes text string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"text\");\r",
											"});\r",
											"// Verify that body response includes author attribute\r",
											"pm.test(\"Body response includes author attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"author\");\r",
											"});\r",
											"// Verify that body response includes name attribute\r",
											"pm.test(\"Body response includes name attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"name\");\r",
											"});\r",
											"// Verify that body response includes contactIds attribute\r",
											"pm.test(\"Body response includes contactIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"contactIds\");\r",
											"});\r",
											"// Verify that body response includes dealIds attribute\r",
											"pm.test(\"Body response includes dealIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"dealIds\");\r",
											"});\r",
											"// Verify that body response includes companyIds attribute\r",
											"pm.test(\"Body response includes companyIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"companyIds\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "077d2b02-88f7-4aac-b838-c61f46e1b119"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes"
									],
									"query": [
										{
											"key": "entity",
											"value": "deals",
											"description": "Filter by note entity type",
											"disabled": true
										},
										{
											"key": "entityIds",
											"value": "veniam elit in",
											"description": "Filter by note entity IDs",
											"disabled": true
										},
										{
											"key": "dateFrom",
											"value": "-41398727",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "dateTo",
											"value": "-41398727",
											"description": "dateTo to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "13396752",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns notes list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"text\": \"In communication with client for resolution of queries.\",\n    \"id\": \"61a5cd07ca1347c82306ad09\",\n    \"contactIds\": [\n      247,\n      1,\n      2\n    ],\n    \"dealIds\": [\n      \"61a5ce58c5d4795761045990\",\n      \"61a5ce58c5d4795761045991\"\n    ],\n    \"authorId\": {\n      \"email\": \"johndoe@example.com\",\n      \"locale\": \"en_GB\",\n      \"timezone\": \"Asia/Kolkata\",\n      \"name\": {\n        \"fullName\": \"John Doe\"\n      }\n    },\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n    \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n  },\n  {\n    \"text\": \"In communication with client for resolution of queries.\",\n    \"id\": \"61a5cd07ca1347c82306ad09\",\n    \"contactIds\": [\n      247,\n      1,\n      2\n    ],\n    \"dealIds\": [\n      \"61a5ce58c5d4795761045990\",\n      \"61a5ce58c5d4795761045991\"\n    ],\n    \"authorId\": {\n      \"email\": \"johndoe@example.com\",\n      \"locale\": \"en_GB\",\n      \"timezone\": \"Asia/Kolkata\",\n      \"name\": {\n        \"fullName\": \"John Doe\"\n      }\n    },\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n    \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n  }\n]"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body response includes id string\r",
											"pm.test(\"Body response includes id string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes text string\r",
											"pm.test(\"Body response includes text string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"text\");\r",
											"});\r",
											"// Verify that body response includes contactIds attribute\r",
											"pm.test(\"Body response includes contactIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"contactIds\");\r",
											"});\r",
											"// Verify that body response includes companyIds attribute\r",
											"pm.test(\"Body response includes companyIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"companyIds\");\r",
											"});\r",
											"// Verify that body response includes dealIds attribute\r",
											"pm.test(\"Body response includes dealIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"dealIds\");\r",
											"});\r",
											"// Verify that body response includes authorId attribute\r",
											"pm.test(\"Body response includes authorId attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"authorId\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Length is present in headers\r",
											"pm.test(\"Content-Length is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"noteId\", jsonData.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "0d0bd1f3-4a35-4363-a279-d67eab69ad33"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "a659aed7-ef87-4a86-9897-f926b19c08b6"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"New Note : In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    3\n  ],\n  \"dealIds\": [\n    \"663394dda3602a4b397a269e\"\n  ],\n  \"companyIds\": [\n    \"6632c6b60d80fe94af2710b4\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/notes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes"
									]
								}
							},
							"response": [
								{
									"name": "Created new note",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad09\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								},
								{
									"name": "Format is not supported",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"The format not supported for deserialization.\"\n}"
								}
							]
						},
						{
							"name": "Get a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes id string\r",
											"pm.test(\"Body response includes id string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes text string\r",
											"pm.test(\"Body response includes text string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"text\");\r",
											"});\r",
											"// Verify that body response includes contactIds attribute\r",
											"pm.test(\"Body response includes contactIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"contactIds\");\r",
											"});\r",
											"// Verify that body response includes companyIds attribute\r",
											"pm.test(\"Body response includes companyIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"companyIds\");\r",
											"});\r",
											"// Verify that body response includes dealIds attribute\r",
											"pm.test(\"Body response includes dealIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"dealIds\");\r",
											"});\r",
											"// Verify that body response includes authorId attribute\r",
											"pm.test(\"Body response includes authorId attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"authorId\");\r",
											"});\r",
											"// Verify that body response includes author attribute\r",
											"pm.test(\"Body response includes author attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"author\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "943a8729-a4b5-46de-a328-cf724ba00dc3"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "6632a0a0d8ccc2aafe650113",
											"description": "(Required) Note ID to get",
											"uuid": "7c83770c-56d9-4c60-bef5-b3615995355a"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the Note by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"id\": \"61a5cd07ca1347c82306ad09\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"authorId\": {\n    \"email\": \"johndoe@example.com\",\n    \"locale\": \"en_GB\",\n    \"timezone\": \"Asia/Kolkata\",\n    \"name\": {\n      \"fullName\": \"John Doe\"\n    }\n  },\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n  \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body response includes text string\r",
											"pm.test(\"Body response includes text string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Ongoing communication with client for resolution of queries.\");\r",
											"});\r",
											"// Verify that body response includes contactIds attribute\r",
											"pm.test(\"Body response includes contactIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"contactIds\");\r",
											"});\r",
											"// Verify that body response includes companyIds attribute\r",
											"pm.test(\"Body response includes companyIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"companyIds\");\r",
											"});\r",
											"// Verify that body response includes dealIds attribute\r",
											"pm.test(\"Body response includes dealIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"dealIds\");\r",
											"});\r",
											"// Verify that body response includes authorId attribute\r",
											"pm.test(\"Body response includes authorId attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"authorId\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present n headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "683b8021-6f14-4873-bb88-64a3a27338a8"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "ddd9440b-9b02-4921-a7ca-d3f54bc45a4e"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"Ongoing communication with client for resolution of queries.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{noteId}}",
											"description": "(Required) Note ID to update",
											"uuid": "acb80df0-6ce5-43bf-895e-54e1217b39de"
										}
									]
								}
							},
							"response": [
								{
									"name": "Note updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								},
								{
									"name": "Format is not supported",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"The format not supported for deserialization.\"\n}"
								}
							]
						},
						{
							"name": "Delete a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "e7274e93-e81a-4bb1-9310-74d9e0469b9b"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{noteId}}",
											"description": "(Required) Note ID to delete",
											"uuid": "c4db5f4b-7d96-4bbf-a98c-5f395085fb8d"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Files",
					"item": [
						{
							"name": "Get all files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes task id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes size string\r",
											"pm.test(\"Body response includes size string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"size\");\r",
											"});\r",
											"// Verify that body response includes authorId attribute\r",
											"pm.test(\"Body response includes authorId attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"authorId\");\r",
											"});\r",
											"// Verify that body response includes name attribute\r",
											"pm.test(\"Body response includes name attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"name\");\r",
											"});\r",
											"// Verify that body response includes contactId attribute\r",
											"pm.test(\"Body response includes contactId attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"contactId\");\r",
											"});\r",
											"// Verify that body response includes dealId attribute\r",
											"pm.test(\"Body response includes dealId attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"dealId\");\r",
											"});\r",
											"// Verify that body response includes companyId attribute\r",
											"pm.test(\"Body response includes companyId attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"companyId\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "2cac000d-0503-4794-bc67-9587a13707fe"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files"
									],
									"query": [
										{
											"key": "entity",
											"value": "deals",
											"description": "Filter by file entity type",
											"disabled": true
										},
										{
											"key": "entityIds",
											"value": "veniam elit in",
											"description": "Filter by file entity IDs",
											"disabled": true
										},
										{
											"key": "dateFrom",
											"value": "-41398727",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "dateTo",
											"value": "-41398727",
											"description": "dateTo to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "13396752",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns files list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"example.png\",\n    \"authorId\": \"61a5ce58y5d4795761045991\",\n    \"contactId\": 1,\n    \"dealId\": \"61a5ce58c5d4795761045991\",\n    \"companyId\": \"61a5ce58c5d4795761045991\",\n    \"size\": 10,\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n  },\n  {\n    \"name\": \"example.png\",\n    \"authorId\": \"61a5ce58y5d4795761045991\",\n    \"contactId\": 1,\n    \"dealId\": \"61a5ce58c5d4795761045991\",\n    \"companyId\": \"61a5ce58c5d4795761045991\",\n    \"size\": 10,\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n  }\n]"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Upload a file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.name);\r",
											"console.log(jsonData.id);\r",
											"pm.environment.set(\"fileId\", jsonData.id);\r",
											"\r",
											"// Test that response body includes the file ID\r",
											"pm.test(\"Test that response body includes the file ID\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											"// verify the file name value\r",
											"pm.test(\"Test for the file name value\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(\"Jenkins.png\");\r",
											"});\r",
											"// verify the file authorId value\r",
											"pm.test(\"Test for the authorId value\", function () {\r",
											"    pm.expect(jsonData.authorId).to.eql(\"662f7f448089f8129a3b9253\");\r",
											"});\r",
											"// verify the file companyId value\r",
											"pm.test(\"Test for the companyId value\", function () {\r",
											"    pm.expect(jsonData.companyId).to.eql(\"66338af6a3602a4b397a265c\");\r",
											"});\r",
											"// verify the file dealId value\r",
											"pm.test(\"Test for the dealId value\", function () {\r",
											"    pm.expect(jsonData.dealId).to.eql(\"663394dda3602a4b397a269e\");\r",
											"});\r",
											"// verify the file contactId value\r",
											"pm.test(\"Test for the contactId value\", function () {\r",
											"    pm.expect(jsonData.contactId).to.eql(3);\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"uuid": "9b1cffc3-0e72-4b79-852a-09d76624c5a8"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "a12d21a5-b4f1-40d9-9167-dd7d08fe85b7"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) File data to create a file.",
											"type": "file",
											"src": "postman-cloud:///1ef0ae0a-4d68-4910-a7f3-0e45248dc1e9"
										},
										{
											"key": "dealId",
											"value": "663394dda3602a4b397a269e",
											"type": "text"
										},
										{
											"key": "contactId",
											"value": "3",
											"type": "text"
										},
										{
											"key": "companyId",
											"value": "66338af6a3602a4b397a265c",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/crm/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files"
									]
								}
							},
							"response": [
								{
									"name": "Returns the created File with additional details",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) File data to create a file.",
													"type": "file",
													"src": []
												},
												{
													"key": "dealId",
													"value": "proident",
													"type": "text"
												},
												{
													"key": "contactId",
													"value": "27165486",
													"type": "text"
												},
												{
													"key": "companyId",
													"value": "nisi aliquip",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/crm/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"example.png\",\n  \"authorId\": \"61a5ce58y5d4795761045991\",\n  \"contactId\": 1,\n  \"dealId\": \"61a5ce58c5d4795761045991\",\n  \"companyId\": \"61a5ce58c5d4795761045991\",\n  \"size\": 10,\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) File data to create a file.",
													"type": "file",
													"src": []
												},
												{
													"key": "dealId",
													"value": "proident",
													"type": "text"
												},
												{
													"key": "contactId",
													"value": "27165486",
													"type": "text"
												},
												{
													"key": "companyId",
													"value": "nisi aliquip",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/crm/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid deals ids format.\"\n}"
								}
							]
						},
						{
							"name": "Download a file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "8e5dd04d-3873-4a2f-9628-a99dcb032656"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "663776961475e991d064377e",
											"description": "(Required) File id to download.",
											"uuid": "4e4f1951-a477-418d-aadc-60ee28c4eba8"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns downloadable file link. Valid for next 5 minutes only.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"fileUrl\": \"https://storage.googleapis.com/sendinblue-app-crm.......-sample.pdf\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Get file details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"console.log(jsonData.name);\r",
											"\r",
											"// Verify the file ID\r",
											"pm.test(\"Test for the file id value\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(\"663776961475e991d064377e\");\r",
											"});\r",
											"\r",
											"// verify the file name value\r",
											"pm.test(\"Test for the file name value\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(\"Appium.png\");\r",
											"});\r",
											"// verify the file size\r",
											"pm.test(\"Verify the file size\", function () {\r",
											"    pm.expect(jsonData.size).to.eql(326531);\r",
											"});\r",
											"// verify the file companyId value\r",
											"pm.test(\"Test for the companyId value\", function () {\r",
											"    pm.expect(jsonData.companyIds[0]).to.eql(\"66338af6a3602a4b397a265c\");\r",
											"});\r",
											"// verify the file dealId value\r",
											"pm.test(\"Test for the dealId value\", function () {\r",
											"    pm.expect(jsonData.dealsIds[0]).to.eql(\"663394dda3602a4b397a269e\");\r",
											"});\r",
											"// verify the file contactId value\r",
											"pm.test(\"Test for the contactId value\", function () {\r",
											"    pm.expect(jsonData.contactId).to.eql(\"3\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "e02b3e4f-7083-481b-8d87-b1c6574c58d6"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id/data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id",
										"data"
									],
									"variable": [
										{
											"key": "id",
											"value": "663776961475e991d064377e",
											"description": "(Required) File id to get file data.",
											"uuid": "f488392d-9c10-4c6d-8dd4-f27d7536524c"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when file is found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"example.png\",\n  \"authorId\": \"61a5ce58y5d4795761045991\",\n  \"contactId\": 1,\n  \"dealId\": \"61a5ce58c5d4795761045991\",\n  \"companyId\": \"61a5ce58c5d4795761045991\",\n  \"size\": 10,\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"fileId\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "a56d7e92-16ee-4e47-a821-3272d6d15e85"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{fileId}}",
											"description": "(Required) File id to delete.",
											"uuid": "872094a5-75c1-4ddf-b114-f9aee3fe272f"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when file is deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Marketing",
			"item": [
				{
					"name": "Email Campaigns",
					"item": [
						{
							"name": "Create an email campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "1310e16c-925d-42aa-8623-5cac37cb7eb2"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "e2b35919-b696-4946-90cf-d3f035cfa677"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": 71900287,\n  \"scheduledAt\": \"Excepteur molli\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"veniam_8\": {},\n    \"nullac\": {},\n    \"cillum3c\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": -20032777,\n  \"scheduledAt\": \"exercitation labore Excepteur irure\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_b6\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": -20032777,\n  \"scheduledAt\": \"exercitation labore Excepteur irure\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_b6\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an email campaign report",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "739d0df6-9ba1-46e1-977d-45f319d18ce6"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "",
											"description": "(Required) Id of the campaign",
											"uuid": "699469d1-5a78-4dbf-933b-dc3592324a6f"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 22,\n  \"name\": \"Weekly - 1\",\n  \"subject\": \"Week 1 - Newsletter\",\n  \"type\": \"classic\",\n  \"status\": \"draft\",\n  \"scheduledAt\": \"2017-09-22T12:30:00.000Z\",\n  \"testSent\": false,\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"sender\": {\n    \"email\": \"newsletter@mycompany.com\",\n    \"name\": \"Newsletter\",\n    \"id\": 26\n  },\n  \"replyTo\": \"replyto@domain.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"htmlContent\": \"This is my HTML Content\",\n  \"shareLink\": \"http://dhh.sendinblue.com/fhsgccc.html?t=9865448900\",\n  \"tag\": \"Newsletter\",\n  \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"recipients\": {\n    \"lists\": [\n      22\n    ],\n    \"exclusionLists\": [\n      45\n    ]\n  },\n  \"statistics\": {\n    \"globalStats\": {\n      \"uniqueClicks\": 2300,\n      \"clickers\": 2665,\n      \"complaints\": 1,\n      \"delivered\": 19765,\n      \"sent\": 19887,\n      \"softBounces\": 100,\n      \"hardBounces\": 87,\n      \"uniqueViews\": 7779,\n      \"trackableViews\": 5661,\n      \"trackableViewsRate\": 23.45,\n      \"estimatedViews\": 560,\n      \"unsubscriptions\": 2,\n      \"viewed\": 8999\n    },\n    \"campaignStats\": [\n      {\n        \"listId\": 22,\n        \"uniqueClicks\": 2300,\n        \"clickers\": 2665,\n        \"complaints\": 1,\n        \"delivered\": 19765,\n        \"sent\": 19887,\n        \"softBounces\": 100,\n        \"hardBounces\": 87,\n        \"uniqueViews\": 7779,\n        \"trackableViews\": 5661,\n        \"unsubscriptions\": 2,\n        \"viewed\": 8999,\n        \"deferred\": 30\n      }\n    ],\n    \"mirrorClick\": 120,\n    \"remaining\": 1000,\n    \"linksStats\": {\n      \"http://myUrl1.domain.com\": {\n        \"nbClick\": 80\n      },\n      \"http://myUrl2.domain.com\": {\n        \"nbClick\": 80\n      },\n      \"http://myUrl3.domain.com\": {\n        \"nbClick\": 80\n      }\n    },\n    \"statsByDomain\": {\n      \"gmail\": {\n        \"uniqueClicks\": 2300,\n        \"clickers\": 2665,\n        \"complaints\": 1,\n        \"delivered\": 19765,\n        \"sent\": 19887,\n        \"softBounces\": 100,\n        \"hardBounces\": 87,\n        \"uniqueViews\": 7779,\n        \"unsubscriptions\": 2,\n        \"viewed\": 8999,\n        \"deferred\": 30\n      }\n    },\n    \"statsByDevice\": {\n      \"desktop\": {\n        \"mac\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 2,\n          \"uniqueViews\": 1\n        }\n      },\n      \"mobile\": {\n        \"androidMobile\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 1,\n          \"uniqueViews\": 0\n        },\n        \"iPhone\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 2,\n          \"uniqueViews\": 0\n        }\n      }\n    },\n    \"statsByBrowser\": {\n      \"thunderbird\": {\n        \"clickers\": 1,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      },\n      \"safari\": {\n        \"clickers\": 1,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      },\n      \"internetExplorer\": {\n        \"clickers\": 0,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      }\n    }\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an email campaign",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "2b54b9df-7f81-43a4-ae69-ae6c4c1da60e"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "28b47179-db98-4c68-8b32-93f109efab98"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"ipsum\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"tempor__\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the campaign",
											"uuid": "21a1cf8b-dc34-4553-a254-0c738adbdc70"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an email campaign",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "812dddaa-3d0f-4a75-82be-ea78b4942b9b"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign",
											"uuid": "bf0fe701-6755-40c1-af46-fa1c896bd260"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an email campaign immediately, based on campaignId",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "9eac365e-8a83-4c07-b10f-517c0d36c176"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendNow"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the campaign",
											"uuid": "91147865-9c67-4871-aa0f-d46a0dc26eee"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign has been scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Campaign could not be sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You don't have enough credit to send your campaign. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an email campaign to your test list",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "f6f0cc82-4698-46ed-8593-587ae4afebba"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "6a137afe-4194-497b-a221-f2e3233e49c8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendTest"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the campaign",
											"uuid": "dfa1d519-ca0f-4879-8495-cee570fc1aca"
										}
									]
								}
							},
							"response": [
								{
									"name": "Test email has been sent successfully to all recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test email could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"75BfS6kLq8tM@SJimzZAEpYHRyLStQjY.gxs\",\n    \"5raZtMVhzx@gMjdaabGzAjkYrK.fnco\"\n  ],\n  \"withoutListEmails\": [\n    \"3j0Dt@VghDwawjVvNTjFVmRKWJ.agyu\",\n    \"UaS0Xey-oMdkd@vZKiBhSUbOueTWIJZpFdJmnF.ug\"\n  ],\n  \"blackListedEmails\": [\n    \"jooW@GLWhkVFSczNd.qgrn\",\n    \"K0YvNXk7f@tETerPDdjJVYYwNPbKs.pur\"\n  ]\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"XUvXs2MUkZy@eNdDZoaehFi.etn\",\n    \"HnrmUyMYn@sfTjWkSBpk.hm\"\n  ],\n  \"withoutListEmails\": [\n    \"qSPfAA-ZR9R@CdCUpePDRUIlyeX.js\",\n    \"hoJRuR3l@MHrCixtPTEHuYek.hs\"\n  ],\n  \"blackListedEmails\": [\n    \"wjSlx1vUDTsWt5@SzwzihE.ot\",\n    \"LO4E3a@ycxq.ri\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Update an email campaign status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "6195fe7c-403f-44f8-b298-3536dc52669f"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "a9bb2310-8580-4f3d-ad0c-0f8be98109b1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"suspended\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"status"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the campaign",
											"uuid": "d5ddd409-694e-4322-a110-13db9272d1d0"
										}
									]
								}
							},
							"response": [
								{
									"name": "The campaign status has been updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send the report of a campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "7c0bb623-f292-4609-bd18-1cceb1a2fb27"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "ac2e68ed-bdd5-4bcc-bbbf-7e64f89c33fe"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendReport"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the campaign",
											"uuid": "2afc6c0d-4cb0-4eaa-86b6-dc2ab5eeffd2"
										}
									]
								},
								"description": "A PDF will be sent to the specified email addresses"
							},
							"response": [
								{
									"name": "Report has been successfully sent to the defined recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an A/B test email campaign results",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "336bd1de-4d20-4b31-92fc-e26b3e7d425c"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"abTestCampaignResult"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the A/B test campaign",
											"uuid": "8cd9318a-0e4c-443e-8cef-fb87144ade77"
										}
									]
								},
								"description": "Obtain winning version of an A/B test email campaign"
							},
							"response": [
								{
									"name": "A/B test email campaign Result",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"winningVersion\": \"B\",\n  \"winningCriteria\": \"Click\",\n  \"openRate\": \"100%\",\n  \"clickRate\": \"50%\",\n  \"winningVersionRate\": \"0%\",\n  \"statistics\": {\n    \"openers\": {\n      \"Version A\": \"20%\",\n      \"Version B\": \"100%\"\n    },\n    \"clicks\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"50%\"\n    },\n    \"unsubscribed\": {\n      \"Version A\": \"20%\",\n      \"Version B\": \"0%\"\n    },\n    \"softBounces\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    },\n    \"hardBounces\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    },\n    \"complaints\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    }\n  },\n  \"clickedLinks\": {\n    \"Version A\": [\n      {\n        \"link\": \"https://google.com\",\n        \"clicksCount\": 0,\n        \"clickRate\": \"0%\"\n      },\n      {\n        \"link\": \"https://youtube.com\",\n        \"clicksCount\": 0,\n        \"clickRate\": \"0%\"\n      }\n    ],\n    \"Version B\": [\n      {\n        \"link\": \"http://www.github.com\",\n        \"clicksCount\": 2,\n        \"clickRate\": \"40%\"\n      },\n      {\n        \"link\": \"http://www.stackoverflow.com\",\n        \"clicksCount\": 3,\n        \"clickRate\": \"60%\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "A/B test Email Campaign not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a shared template url",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "c5702208-79a1-48b7-883a-160c485d4919"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sharedUrl"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the campaign or template",
											"uuid": "053fa490-1d16-49f2-8710-1072e1de916c"
										}
									]
								},
								"description": "Get a unique URL to share & import an email template from one Sendinblue account to another."
							},
							"response": [
								{
									"name": "Shared template URL information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"sharedUrl\": \"https://my.sendinblue.com/pt2YU7R5W_guXlowgumy_VX4pFsKu._zd0Gjj96x1_GMmzc1Qps5ZIpj6nx-\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign/Template ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Only email campaigns or templates are allowed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export the recipients of an email campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "adda0d26-d589-4e00-b73f-3e2c63e431c2"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "d1e39d4e-dd8c-4e73-82d4-6bb00cad1ba8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"exportRecipients"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the campaign",
											"uuid": "eeb45488-aa78-4d0e-ab8f-e5df25e38afa"
										}
									]
								}
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Return all your created email campaigns",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body matches campaigns string\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"campaigns\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "b7f89e87-5cd7-4906-bf40-1b4656d1d66e"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns"
									],
									"query": [
										{
											"key": "type",
											"value": "classic",
											"description": "Filter on the type of the campaigns",
											"disabled": true
										},
										{
											"key": "status",
											"value": "archive",
											"description": "Filter on the status of the campaign",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used**. Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent email campaigns.\n**Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used**. Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent email campaigns.\n**Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaigns informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns?type=classic&status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											],
											"query": [
												{
													"key": "type",
													"value": "classic"
												},
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 2,\n  \"campaigns\": [\n    {\n      \"id\": 12,\n      \"name\": \"EN - Sales Summer 2017\",\n      \"subject\": \"20% OFF for 2017 Summer Sales\",\n      \"type\": \"classic\",\n      \"status\": \"sent\",\n      \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n      \"testSent\": true,\n      \"header\": \"[DEFAULT_HEADER]\",\n      \"footer\": \"[DEFAULT_FOOTER]\",\n      \"sender\": {\n        \"email\": \"marketing@mycompany.com\",\n        \"name\": \"Marketing\",\n        \"id\": 26\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"{FNAME} {LNAME}\",\n      \"htmlContent\": \"This is my HTML Content\",\n      \"shareLink\": \"http://example.com/fhsgccc.html?t=9865448900\",\n      \"tag\": \"Newsletter\",\n      \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"inlineImageActivation\": true,\n      \"mirrorActive\": true,\n      \"recurring\": false,\n      \"recipients\": {\n        \"lists\": [\n          5\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"globalStats\": {\n          \"uniqueClicks\": 2300,\n          \"clickers\": 2665,\n          \"complaints\": 1,\n          \"delivered\": 19765,\n          \"sent\": 19887,\n          \"softBounces\": 100,\n          \"hardBounces\": 87,\n          \"uniqueViews\": 7779,\n          \"trackableViews\": 5661,\n          \"trackableViewsRate\": 23.45,\n          \"estimatedViews\": 560,\n          \"unsubscriptions\": 2,\n          \"viewed\": 8999\n        },\n        \"campaignStats\": [\n          {\n            \"listId\": 5,\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"trackableViews\": 5661,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        ],\n        \"mirrorClick\": 120,\n        \"remaining\": 1000,\n        \"linksStats\": {\n          \"http://myUrl1.domain.com\": 80\n        },\n        \"statsByDomain\": {\n          \"yahoo.com\": {\n            \"uniqueClicks\": 298,\n            \"clickers\": 533,\n            \"complaints\": 0,\n            \"sent\": 25601,\n            \"softBounces\": 5,\n            \"hardBounces\": 0,\n            \"uniqueViews\": 3527,\n            \"unsubscriptions\": 17,\n            \"viewed\": 5255,\n            \"delivered\": 25596\n          },\n          \"hotmail.co.uk\": {\n            \"uniqueClicks\": 1970,\n            \"clickers\": 2720,\n            \"complaints\": 5,\n            \"sent\": 117055,\n            \"softBounces\": 111,\n            \"hardBounces\": 0,\n            \"uniqueViews\": 21111,\n            \"unsubscriptions\": 105,\n            \"viewed\": 35251,\n            \"delivered\": 117056\n          }\n        }\n      }\n    },\n    {\n      \"id\": 22,\n      \"name\": \"Weekly - 1\",\n      \"subject\": \"Week 1 - Newsletter\",\n      \"type\": \"Classic\",\n      \"status\": \"draft\",\n      \"scheduledAt\": \"\",\n      \"testSent\": false,\n      \"header\": \"[DEFAULT_HEADER]\",\n      \"footer\": \"[DEFAULT_FOOTER]\",\n      \"sender\": {\n        \"email\": \"newsletter@mycompany.com\",\n        \"name\": \"Newsletter\",\n        \"id\": 26\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"{FNAME} {LNAME}\",\n      \"htmlContent\": \"This is my HTML Content\",\n      \"shareLink\": \"http://example.com/fhsgccc.html?t=9865448900\",\n      \"tag\": \"Newsletter\",\n      \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"inlineImageActivation\": true,\n      \"mirrorActive\": true,\n      \"recurring\": false,\n      \"recipients\": {\n        \"lists\": [\n          10\n        ],\n        \"exclusionLists\": [\n          45\n        ]\n      },\n      \"statistics\": {\n        \"globalStats\": {\n          \"uniqueClicks\": 2300,\n          \"clickers\": 2665,\n          \"complaints\": 1,\n          \"delivered\": 19765,\n          \"sent\": 19887,\n          \"softBounces\": 100,\n          \"hardBounces\": 87,\n          \"uniqueViews\": 7779,\n          \"trackableViews\": 5661,\n          \"trackableViewsRate\": 23.45,\n          \"estimatedViews\": 560,\n          \"unsubscriptions\": 2,\n          \"viewed\": 8999\n        },\n        \"campaignStats\": [\n          {\n            \"listId\": 10,\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"trackableViews\": 5661,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        ],\n        \"mirrorClick\": 120,\n        \"remaining\": 1000,\n        \"linksStats\": {\n          \"http://myUrl1.domain.com\": {\n            \"nbClick\": 80\n          },\n          \"http://myUrl2.domain.com\": {\n            \"nbClick\": 80\n          },\n          \"http://myUrl3.domain.com\": {\n            \"nbClick\": 80\n          }\n        },\n        \"statsByDomain\": {\n          \"gmail\": {\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          },\n          \"aol\": {\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        }\n      }\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns?type=classic&status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											],
											"query": [
												{
													"key": "type",
													"value": "classic"
												},
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Upload an image to your account's image gallery",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "983b3205-1f7f-4d7e-8e6f-be53ecd0313d"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "aaf9896a-7a40-402c-abef-62310542bf7a"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/images",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										"images"
									]
								}
							},
							"response": [
								{
									"name": "Image has been successfully uploaded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/images",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												"images"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"url\": \"https://img.mailinblue.com/100000/images/rnb/original/62casdase8wewq9df1c2f27c.jpeg\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/images",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												"images"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "SMS Campaigns",
					"item": [
						{
							"name": "Returns the information for all your created SMS campaigns",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body matches campaigns string\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"campaigns\");\r",
											"});\r",
											"\r",
											"// Verify that body matches statistics string\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"statistics\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "2191909a-e555-44e0-bc3a-8b23c049bae0"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns"
									],
									"query": [
										{
											"key": "status",
											"value": "archive",
											"description": "Status of campaign.",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent sms campaigns. **Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent sms campaigns. **Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Number limitation for the result returned",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaigns informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns?status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=500&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											],
											"query": [
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"campaigns\": [\n    {\n      \"id\": 2,\n      \"name\": \"PROMO CODE\",\n      \"status\": \"sent\",\n      \"content\": \"Visit our Store and get some discount !\",\n      \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n      \"testSent\": true,\n      \"sender\": \"MyCompany\",\n      \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"sentDate\": \"2017-06-01T12:30:00.000Z\",\n      \"recipients\": {\n        \"lists\": [\n          21\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"delivered\": 2987,\n        \"sent\": 3000,\n        \"processing\": 0,\n        \"softBounces\": 3,\n        \"hardBounces\": 1,\n        \"unsubscriptions\": 3,\n        \"answered\": 2\n      }\n    },\n    {\n      \"id\": 10,\n      \"name\": \"SUMMER SALE\",\n      \"status\": \"draft\",\n      \"content\": \"Summer Sale is starting tomorrow. Get extra 10% with this code:SUM17\",\n      \"scheduledAt\": \"2017-08-04T12:30:00.000Z\",\n      \"testSent\": false,\n      \"sender\": \"MyCompany\",\n      \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"sentDate\": \"2017-06-01T12:30:00.000Z\",\n      \"recipients\": {\n        \"lists\": [\n          21\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"delivered\": 2987,\n        \"sent\": 3000,\n        \"processing\": 0,\n        \"softBounces\": 3,\n        \"hardBounces\": 1,\n        \"unsubscriptions\": 3,\n        \"answered\": 2\n      }\n    }\n  ],\n  \"count\": 12\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns?status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=500&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											],
											"query": [
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Creates an SMS campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body returns sms campaign id\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"smsCamId\", jsonData.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "3502c0c2-8564-404b-a38f-686dcd1d6b6b"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "855d489e-b5fa-40fd-9d7d-702013efabcf"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"Marketing\",\n  \"recipients\": {\n    \"listIds\": [\n      4\n    ]\n   /* \"exclusionListIds\": [\n      15,\n      15\n    ]*/\n  },\n  //\"scheduledAt\": \"sed\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"laborum ex\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"laborum ex\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an SMS campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.test(\"verify the id value\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(4);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Spring Promo Code\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "ba9d9c68-d593-4de3-9acd-98d02344d67b"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "4",
											"description": "(Required) id of the SMS campaign",
											"uuid": "ac5d3def-756d-49c2-a0a1-a160d6c1b5c4"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 2,\n  \"name\": \"PROMO CODE\",\n  \"status\": \"sent\",\n  \"content\": \"Visit our Store and get some discount !\",\n  \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n  \"testSent\": true,\n  \"sender\": \"MyCompany\",\n  \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n  \"recipients\": {\n    \"lists\": [\n      21\n    ],\n    \"exclusionLists\": [\n      13\n    ]\n  },\n  \"statistics\": {\n    \"delivered\": 2987,\n    \"sent\": 3000,\n    \"processing\": 0,\n    \"softBounces\": 3,\n    \"hardBounces\": 1,\n    \"unsubscriptions\": 3,\n    \"answered\": 2\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an SMS campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Empty response body\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "e7d5e047-c010-4697-b14f-62de19803715"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "c38c2946-b6b0-4fbc-98f3-3ce528934b0f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\"\n /* \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"irure deserunt mollit dolore\",\n  \"unicodeEnabled\": true*/\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{smsCamId}}",
											"description": "(Required) id of the SMS campaign",
											"uuid": "3ec0a6a0-b781-4147-bd7b-6582e77b1697"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an SMS campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Empty response body\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "129361fe-de4b-44f3-a1bc-c83195d9dc5b"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{smsCamId}}",
											"description": "(Required) id of the SMS campaign",
											"uuid": "3ce92ce0-217b-4e72-accb-f1a557d92bb3"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send your SMS campaign immediately",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "9fac6de2-b771-49a8-9842-db7ad9610a74"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendNow"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{smsCamId}}",
											"description": "(Required) id of the campaign",
											"uuid": "3b8c9523-e81b-4e9b-ab31-8903b87917ae"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign has been scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "SMS Campaign could not be sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You don't have enough credit to send your campaign. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a campaign's status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "41a17337-e588-4360-8e46-b09a92f4c1b4"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "bccefbd6-0c9c-468f-98f3-ddd653ad28db"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"suspended\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"status"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "4",
											"description": "(Required) id of the campaign",
											"uuid": "00c8d393-1951-4091-b29f-af3213376b92"
										}
									]
								}
							},
							"response": [
								{
									"name": "The campaign status has been updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send a test SMS campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "8595c6e8-d7d3-4cb5-a037-b76d3720f64f"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "c1b1cc80-069f-439d-b004-5db3dc5af17f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendTest"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "4",
											"description": "(Required) Id of the SMS campaign",
											"uuid": "b9394f28-dd43-4749-b74d-0c39c734fc6c"
										}
									]
								}
							},
							"response": [
								{
									"name": "Test SMS has been sent successfully to the recipient",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test SMS could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The SMS could not be sent to all recipients\",\n  \"unexistingSms\": [\n    \"uONf@iAiaZmhYWwGaKp.rtix\",\n    \"FYIHDS@aUQgXmyvqTgUDBWeTXsc.dh\"\n  ],\n  \"withoutListSms\": [\n    \"qRZAMI0KoD5@mIhThccLqX.qjn\",\n    \"CrFkHJl6Pz9bj@CkukdVNyAwyMdcvHBYDZ.vwf\"\n  ]\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export an SMS campaign's recipients",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "0756f65d-53b9-4b75-91cb-894f7cde1f26"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "db7d042e-88d7-4317-8d67-e59a110f3090"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"exportRecipients"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "4",
											"description": "(Required) id of the campaign",
											"uuid": "fab5ace7-d33f-4d0f-9995-05a43b8f3566"
										}
									]
								},
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input."
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an SMS campaign's report",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CF-RAY is present\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "8b5a84cc-b6e9-4202-9712-bc8b0569ea42"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "515cca2f-6541-4218-8f12-5f23feb433dd"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendReport"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "4",
											"description": "(Required) id of the campaign",
											"uuid": "8fdea251-5780-4030-a096-f67078d77349"
										}
									]
								},
								"description": "Send report of Sent and Archived campaign, to the specified email addresses, with respective data and a pdf attachment in detail."
							},
							"response": [
								{
									"name": "Report has been successfully sent to the defined recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Conversations",
			"item": [
				{
					"name": "Messages",
					"item": [
						{
							"name": "Send a message as an agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"messageId\", jsonData.id);\r",
											"\r",
											"// Verify the message type\r",
											"pm.test(\"Verify the message type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"agent\");\r",
											"});\r",
											"// Verify the text message \r",
											"pm.test(\"Verify the text message\", function () {\r",
											"    pm.expect(jsonData.text).to.eql(\"Hello! How can I help you?\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "a9ba105b-9b3b-4d9d-9620-b9013a40da26"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "e5ff069e-bedd-4b77-9acc-738a27c16fb1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visitorId\": \"kZMvWhf{{$randomAlphaNumeric}}npAu3H6qd57w2{{$randomAlphaNumeric}}rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"{{agentId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages"
									]
								}
							},
							"response": [
								{
									"name": "Newly created message is returned as a response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"// Verify the message id\r",
											"pm.test(\"Verify the message id\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(\"LhbrSYX2acvrQ4rXP\");\r",
											"});\r",
											"// Verify the message type\r",
											"pm.test(\"Verify the message type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"agent\");\r",
											"});\r",
											"// Verify the text message \r",
											"pm.test(\"Verify the text message\", function () {\r",
											"    pm.expect(jsonData.text).to.eql(\"Hello! How can I help you?\");\r",
											"});\r",
											"\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "8534f93e-d4fd-427e-9c90-c5282296207a"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "LhbrSYX2acvrQ4rXP",
											"description": "(Required) ID of the message",
											"uuid": "e7d520a7-2e6c-47f7-b1ef-7bee5b0e9733"
										}
									]
								}
							},
							"response": [
								{
									"name": "Requested message is returned as a response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a message sent by an agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.text);\r",
											"\r",
											"// Verify the text message \r",
											"pm.test(\"Verify the text message\", function () {\r",
											"    pm.expect(jsonData.text).to.eql(\"Good morning! How can I help you?\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "8e13e700-d90c-477a-96b1-2d9ad59db2f3"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "0e13381c-eac5-4e8b-8f92-f9a7a159606a"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{messageId}}",
											"description": "(Required) ID of the message",
											"uuid": "bacdbaff-245d-44dd-8de3-a11510e44b8f"
										}
									]
								},
								"description": "Only agents’ messages can be edited."
							},
							"response": [
								{
									"name": "Updated message is returned as a response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a message sent by an agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "50a3c218-f476-40d6-ad30-f7cc783b228a"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{messageId}}",
											"description": "(Required) ID of the message",
											"uuid": "4126f155-6e1f-4f36-9246-bb03b926136d"
										}
									]
								},
								"description": "Only agents’ messages can be deleted."
							},
							"response": [
								{
									"name": "The message was deleted from the conversation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Status",
					"item": [
						{
							"name": "Sets agent’s status to online for 2-3 minutes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify an  empty response body is received\r",
											"pm.test(\"Test for empty response body\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Test for status code 201\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "a4d11a6f-cd27-4baf-b6a1-9f0b426bc1ee"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "9238e0e6-2f0e-4a3d-bdee-82d7b819cd91"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentId\": \"{{agentId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/agentOnlinePing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"agentOnlinePing"
									]
								},
								"description": "We recommend pinging this endpoint every minute for as long as the agent has to be considered online."
							},
							"response": [
								{
									"name": "Status of the agent was set successfully. Response body will be empty.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/agentOnlinePing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"agentOnlinePing"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/agentOnlinePing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"agentOnlinePing"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Pushed messages",
					"item": [
						{
							"name": "Send an automated message to a visitor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"automatedMessageId\", jsonData.id);\r",
											"\r",
											"// Test that response body includes the automated message ID\r",
											"pm.test(\"Test that response body includes the automated message ID\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											"// Verify the automated message text\r",
											"pm.test(\"Test for the automated message text value\", function () {\r",
											"    pm.expect(jsonData.text).to.eql(\"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\");\r",
											"});\r",
											"// verify the automated message visitorId value\r",
											"pm.test(\"Test for the visitorId value\", function () {\r",
											"    pm.expect(jsonData.visitorId).to.eql(\"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\");\r",
											"});\r",
											"\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "f45aa9e6-f364-4619-b989-a6380a1b7f1c"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "4e776dc5-db52-4192-87b0-4d2db740fdb4"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages"
									]
								},
								"description": "Example of automated messages: order status, announce new features in your web app, etc."
							},
							"response": [
								{
									"name": "Newly created message is returned as a response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an automated message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify the automated message id\r",
											"pm.test(\"Verify the automated message id\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(\"Gq2ZnSBs7Y3SYRFFy\");\r",
											"});\r",
											"// Verify the automated message type\r",
											"pm.test(\"Verify the automated message type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"agent\");\r",
											"});\r",
											"// Verify the automated message text\r",
											"pm.test(\"Verify the automated message text\", function () {\r",
											"    pm.expect(jsonData.text).to.eql(\"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\");\r",
											"});\r",
											"// Verify the automated message visitorId\r",
											"pm.test(\"Verify the automated message visitorId\", function () {\r",
											"    pm.expect(jsonData.visitorId).to.eql(\"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\");\r",
											"});\r",
											"// Verify the automated message agentId\r",
											"pm.test(\"Verify the automated message agentId\", function () {\r",
											"    pm.expect(jsonData.agentId).to.eql(\"662f7f448089f8129a3b9254_662f7f448089f8129a3b9253\");\r",
											"});\r",
											"// Verify the automated message createdAt value\r",
											"pm.test(\"Verify the automated message createdAt value\", function () {\r",
											"    pm.expect(jsonData.createdAt).to.eql(1715027847728);\r",
											"});\r",
											"// Verify the automated message isPushed value\r",
											"pm.test(\"Verify the automated message isPushed value\", function () {\r",
											"    pm.expect(jsonData.isPushed).to.eql(true);\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "448154cd-62ca-46df-8fdc-3cd63389e90e"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Gq2ZnSBs7Y3SYRFFy",
											"description": "(Required) ID of the message sent previously",
											"uuid": "ecd7da0d-2dfc-45f9-8244-9d3604cb7cb4"
										}
									]
								}
							},
							"response": [
								{
									"name": "Requested message is returned as a response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an automated message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify the automated message type\r",
											"pm.test(\"Verify the automated message type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"agent\");\r",
											"});\r",
											"// Verify the automated message text\r",
											"pm.test(\"Verify the automated message text\", function () {\r",
											"    pm.expect(jsonData.text).to.eql(\"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\");\r",
											"});\r",
											"// Verify the automated message visitorId\r",
											"pm.test(\"Verify the automated message visitorId\", function () {\r",
											"    pm.expect(jsonData.visitorId).to.eql(\"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\");\r",
											"});\r",
											"// Verify the automated message agentId\r",
											"pm.test(\"Verify the automated message agentId\", function () {\r",
											"    pm.expect(jsonData.agentId).to.eql(\"662f7f448089f8129a3b9254_662f7f448089f8129a3b9253\");\r",
											"});\r",
											"// Verify the automated message isPushed value\r",
											"pm.test(\"Verify the automated message isPushed value\", function () {\r",
											"    pm.expect(jsonData.isPushed).to.eql(true);\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "0b8ce599-1377-4c6a-8601-477597d250fa"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "4c029bb6-52f8-418c-bffc-6fd0f5ea2613"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{automatedMessageId}}",
											"description": "(Required) ID of the message",
											"uuid": "985bed76-0e39-407a-ae97-96e8fa1cdd93"
										}
									]
								}
							},
							"response": [
								{
									"name": "Updated message is returned as a response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an automated message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "bf68ea3a-858c-4c7c-912a-4c2029b3b7e2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{automatedMessageId}}",
											"description": "(Required) ID of the message",
											"uuid": "3c66929b-dc4e-484f-9f35-8ccc07c8c293"
										}
									]
								}
							},
							"response": [
								{
									"name": "The message was deleted from the conversation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Contact management",
			"item": [
				{
					"name": "Contacts",
					"item": [
						{
							"name": "Get all the contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes contact id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes email attribute\r",
											"pm.test(\"Body response includes email attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"email\");\r",
											"});\r",
											"// Verify that body response includes emailBlacklisted attribute\r",
											"pm.test(\"Body response includes emailBlacklisted attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"emailBlacklisted\");\r",
											"});\r",
											"// Verify that body response includes smsBlacklisted attribute\r",
											"pm.test(\"Body response includes smsBlacklisted attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"smsBlacklisted\");\r",
											"});\r",
											"// Verify that body response includes createdAt attribute\r",
											"pm.test(\"Body response includes createdAt attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
											"});\r",
											"// Verify that body response includes modifiedAt attribute\r",
											"pm.test(\"Body response includes modifiedAt attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"modifiedAt\");\r",
											"});\r",
											"// Verify that body response includes listIds attribute\r",
											"pm.test(\"Body response includes listIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"listIds\");\r",
											"});\r",
											"// Verify that body response includes listUnsubscribed attribute\r",
											"pm.test(\"Body response includes listUnsubscribed attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"listUnsubscribed\");\r",
											"});\r",
											"// Verify that body response includes LASTNAME attribute\r",
											"pm.test(\"Body response includes LASTNAME attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"LASTNAME\");\r",
											"});\r",
											"// Verify that body response includes FIRSTNAME attribute\r",
											"pm.test(\"Body response includes FIRSTNAME attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"FIRSTNAME\");\r",
											"});\r",
											"// Verify that body response includes SMS attribute\r",
											"pm.test(\"Body response includes SMS attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"SMS\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "ab7178fa-4acf-42fe-b15c-41ae60e8ad46"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "modifiedSince",
											"value": "2022-02-01T00:00:00.000",
											"description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "All contacts listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "modifiedSince",
													"value": "2022-02-01T00:00:00.000"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contacts\": [\n    {\n      \"email\": \"contact1@example.com\",\n      \"id\": 247,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": true,\n      \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n      \"modifiedAt\": \"2017-05-01T17:05:03.000Z\",\n      \"listIds\": [\n        43,\n        58\n      ],\n      \"attributes\": {\n        \"SMS\": \"33058407250\",\n        \"IDENTIFICATION\": \"1-3RHQ-259\",\n        \"CIV\": \"MS\",\n        \"LAST_NAME\": \"Brennon\",\n        \"FIRST_NAME\": \"Meg\",\n        \"DOB\": \"1986-05-02T00:00:00.000Z\",\n        \"ADDRESS\": \"1 5th avenue\",\n        \"ZIP_CODE\": \"44300\",\n        \"CITY\": \"New-York\",\n        \"ACTION_CODE\": \"17HH98CH\"\n      }\n    },\n    {\n      \"email\": \"33058407248@mailin-sms.com\",\n      \"id\": 245,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n      \"modifiedAt\": \"2017-05-01T17:05:03.000Z\",\n      \"listIds\": [\n        43,\n        61,\n        58\n      ],\n      \"attributes\": {\n        \"SMS\": \"33058407248\",\n        \"IDENTIFICATION\": \"1-78JS-432\",\n        \"CIV\": \"MS\",\n        \"LAST_NAME\": \"Press\",\n        \"FIRST_NAME\": \"Sophia\",\n        \"DOB\": \"1980-09-11T00:00:00.000Z\",\n        \"ADDRESS\": \"5 Flower Street\",\n        \"ZIP_CODE\": \"44119\",\n        \"CITY\": \"Seattle\",\n        \"ACTION_CODE\": \"17HU765\"\n      }\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "modifiedSince",
													"value": "2022-02-01T00:00:00.000"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"contactId\", jsonData.id);\r",
											"\r",
											"// Verify that body response includes contact id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Content-Length is present in headers\r",
											"pm.test(\"Content-Length is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "8e001123-d642-4d7c-a9f9-ef5b0bf5969e"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "9f061a46-2c24-4fbf-af28-928a2d0fa3ef"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{$randomEmail}}\",\n  \"attributes\": {\n    \"FNAME\": \"{{$randomFirstName}}\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									]
								}
							},
							"response": [
								{
									"name": "Contact created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"name": "Contact updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create Contact via DOI (Double-Opt-In) Flow",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "f17a958d-747f-4825-884b-eaf198086ca4"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "cb07ec70-fcda-46f8-9cf9-eef82aef8458"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    4\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 3,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  }\n  /*\"excludeListIds\": [\n    6\n  ]*/\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"doubleOptinConfirmation"
									]
								}
							},
							"response": [
								{
									"name": "DOI Contact created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"doubleOptinConfirmation"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "DOI Contact updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"doubleOptinConfirmation"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"doubleOptinConfirmation"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update multiple contacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "0eb47b54-333a-4453-b801-e46ab1f792ee"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "13530e44-ff85-4ce8-a5f8-5c9fa58b67fa"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"wyman.turner96@gmail.com\",\n      \"id\": 11,\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true\n    },\n    {\n      \"email\": \"salvatore.stanton98@hotmail.com\",\n      \"id\": 10,\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"batch"
									]
								}
							},
							"response": [
								{
									"name": "All contacts updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"john@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"John\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.sendinblue.com/v3/\n/contacts/batch",
											"protocol": "https",
											"host": [
												"api",
												"sendinblue",
												"com"
											],
											"path": [
												"v3",
												"\n",
												"contacts",
												"batch"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Few contacts updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"john@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"John\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"batch"
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"successIds\": [\n    -42087947,\n    74324582\n  ],\n  \"failureIds\": [\n    670206,\n    -86165911\n  ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"elly@example.com\",\n      \"id\": 31,\n      \"sms\": \"+91xxxxxxxxxx\",\n      \"attributes\": {\n        \"proident__8\": {}\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65,\n        65\n      ],\n      \"unlinkListIds\": [\n        36,\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"e7eb@lQEBFvQLPEkt.jldh\",\n        \"XpCRkVUJp-jwi@wH.cjt\"\n      ]\n    },\n    {\n      \"email\": \"elly@example.com\",\n      \"id\": 31,\n      \"sms\": \"+91xxxxxxxxxx\",\n      \"attributes\": {\n        \"exercitation41_\": {}\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65,\n        65\n      ],\n      \"unlinkListIds\": [\n        36,\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"s1ORx3QG@wwTXjfg.xckw\",\n        \"PLC2NlHG8Msb@GbxoDEyLzfdXxPbpXCH.bcco\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"batch"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that response returns process ID\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"processId\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "93b7c56a-94a5-48db-a9aa-790b9d2bd5a3"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "6e83bed9-d755-4570-b93f-ba27984eb396"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"subscribed\",\n//  \"actionForEmailCampaigns\": \"hardBounces\",\n//  \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": 12,\n    \"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"NAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"export"
									]
								},
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input. File will be available in csv."
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"allContacts\",\n    \"actionForEmailCampaigns\": \"clickers\",\n    \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": 12,\n    \"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"NAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"export"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"allContacts\",\n    \"actionForEmailCampaigns\": \"clickers\",\n    \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": 12,\n    \"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"NAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"export"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Import contacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "275eab67-2ef7-4067-8e0e-89745f5eec0e"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "21e418be-b8d4-4b72-ad8c-5a34e5de7ec2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n // \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n /* \"jsonBody\": [\n    {\n      \"ut_7f\": \"Lorem\",\n      \"deserunt_df\": \"Lorem\"\n    },\n    {\n      \"exercitation_30\": \"consequat Lorem\"\n    }\n  ],*/\n  \"listIds\": [\n    8,\n    9\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n /* \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },*/\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"import"
									]
								},
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input."
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"jsonBody\": [\n    {\n      \"esse_c6\": \"sunt minim nostrud \"\n    },\n    {\n      \"pariatur_81d\": \"laboris\"\n    }\n  ],\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"import"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"jsonBody\": [\n    {\n      \"esse_c6\": \"sunt minim nostrud \"\n    },\n    {\n      \"pariatur_81d\": \"laboris\"\n    }\n  ],\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"import"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a contact's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify the contact id\r",
											"pm.test(\"Verify the contact id\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(3);\r",
											"});\r",
											"// Verify the contact email\r",
											"pm.test(\"Verify the contact email\", function () {\r",
											"    pm.expect(jsonData.email).to.eql(\"jane@gmail.com\");\r",
											"});\r",
											"// Test if the contact is emailBlacklisted\r",
											"pm.test(\"Test if the contact is emailBlacklisted\", function () {\r",
											"    pm.expect(jsonData.emailBlacklisted).to.eql(false);\r",
											"});\r",
											"// Test if the contact is smsBlacklisted\r",
											"pm.test(\"Test if the contact is smsBlacklisted\", function () {\r",
											"    pm.expect(jsonData.smsBlacklisted).to.eql(false);\r",
											"});\r",
											"// Verify the contact createdAt value\r",
											"pm.test(\"Verify the contact createdAt value\", function () {\r",
											"    pm.expect(jsonData.createdAt).to.eql(\"2024-05-01T22:11:28.347+02:00\");\r",
											"});\r",
											"\r",
											"// Verify that body response includes contact id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes email attribute\r",
											"pm.test(\"Body response includes email attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"email\");\r",
											"});\r",
											"// Verify that body response includes emailBlacklisted attribute\r",
											"pm.test(\"Body response includes emailBlacklisted attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"emailBlacklisted\");\r",
											"});\r",
											"// Verify that body response includes smsBlacklisted attribute\r",
											"pm.test(\"Body response includes smsBlacklisted attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"smsBlacklisted\");\r",
											"});\r",
											"// Verify that body response includes createdAt attribute\r",
											"pm.test(\"Body response includes createdAt attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
											"});\r",
											"// Verify that body response includes modifiedAt attribute\r",
											"pm.test(\"Body response includes modifiedAt attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"modifiedAt\");\r",
											"});\r",
											"// Verify that body response includes listIds attribute\r",
											"pm.test(\"Body response includes listIds attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"listIds\");\r",
											"});\r",
											"// Verify that body response includes LASTNAME attribute\r",
											"pm.test(\"Body response includes LASTNAME attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"LASTNAME\");\r",
											"});\r",
											"// Verify that body response includes FIRSTNAME attribute\r",
											"pm.test(\"Body response includes FIRSTNAME attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"FIRSTNAME\");\r",
											"});\r",
											"// Verify that body response includes SMS attribute\r",
											"pm.test(\"Body response includes SMS attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"SMS\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "4458d972-cb37-4c8e-9f94-9126bdf3a36f"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be greater than equal to startDate.\n",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": "jane@gmail.com",
											"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value",
											"uuid": "45c0295c-8f18-4a9e-a787-9249a7073b93"
										}
									]
								},
								"description": "Along with the contact details, this endpoint will show the statistics of contact for the recent 90 days by default. To fetch the earlier statistics, please use Get contact campaign stats ``https://developers.sendinblue.com/reference/contacts-7#getcontactstats`` endpoint with the appropriate date ranges."
							},
							"response": [
								{
									"name": "Contact informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"peggy.rain@example.com\",\n  \"id\": 42,\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"createdAt\": \"2017-05-02T16:40:31.000Z\",\n  \"modifiedAt\": \"2017-05-02T16:40:31.000Z\",\n  \"attributes\": {\n    \"FIRST_NAME\": \"Peggy\",\n    \"LAST_NAME\": \"Rain\",\n    \"SMS\": \"3087433387669\",\n    \"CIV\": \"1\",\n    \"DOB\": \"1986-04-13T00:00:00.000Z\",\n    \"ADDRESS\": \"987 5th avenue\",\n    \"ZIP_CODE\": \"87544\",\n    \"CITY\": \"New-York\",\n    \"AREA\": \"NY\"\n  },\n  \"listIds\": [\n    40\n  ],\n  \"statistics\": {\n    \"messagesSent\": [\n      {\n        \"campaignId\": 21,\n        \"eventTime\": \"2016-05-03T20:15:13.000Z\"\n      },\n      {\n        \"campaignId\": 42,\n        \"eventTime\": \"2016-10-17T10:30:01.000Z\"\n      }\n    ],\n    \"opened\": [\n      {\n        \"campaignId\": 21,\n        \"count\": 2,\n        \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n        \"ip\": \"66.249.93.118\"\n      },\n      {\n        \"campaignId\": 68,\n        \"count\": 1,\n        \"eventTime\": \"2017-01-30T13:56:40.000Z\",\n        \"ip\": \"66.249.93.217\"\n      }\n    ],\n    \"clicked\": [\n      {\n        \"campaignId\": 21,\n        \"links\": [\n          {\n            \"count\": 2,\n            \"eventTime\": \"2016-05-03T21:25:01.000Z\",\n            \"ip\": \"66.249.93.118\",\n            \"url\": \"https://url.domain.com/fbe5387ec717e333628380454f68670010b205ff/1/go?uid={EMAIL}&utm_source=sendinblue&utm_campaign=test_camp&utm_medium=email\"\n          }\n        ]\n      }\n    ],\n    \"delivered\": [\n      {\n        \"campaignId\": 21,\n        \"count\": 2,\n        \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n        \"ip\": \"66.249.93.118\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "f986d700-d3ea-4df5-9ba4-9e0e691070b8"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "13dd94cb-c75e-4652-90ea-3616a8b298cf"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"occaecat_3d3\": {},\n    \"consectetur_5\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true\n  /*\"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"2tD@yHGSlOErIdPjXSRRCUPBPdlcwl.lkbz\",\n    \"IsBKLQFo@XuqjOjVDBfCmvxFMDtrmU.fogq\"\n  ]*/\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "{{contactId}}",
											"description": "(Required) Email (urlencoded) OR ID of the contact",
											"uuid": "38bd601d-e140-4172-bb3e-573761e67f29"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"// Verify that vary is present in headers\r",
											"pm.test(\"vary is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"vary\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "2f57f2ad-1a8c-4b52-a4b5-1e4e408bde4f"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "{{contactId}}",
											"description": "(Required) Email (urlencoded) OR ID of the contact",
											"uuid": "ed27ecf2-3adc-44ba-9239-fc26b03eb8e7"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You're not allowed to delete registered email contact with SendinBlue",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get email campaigns' statistics for a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has a OK string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//Verify the response time is less than 1000ms\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "c4829504-bb32-4a1a-89a1-d78c4906e9d3"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier/campaignStats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier",
										"campaignStats"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be greater than equal to startDate. Maximum difference between startDate and endDate should not be greater than 90 days\n",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": "jane@gmail.com",
											"description": "(Required) Email (urlencoded) OR ID of the contact",
											"uuid": "3208b17c-85a6-4acf-8d04-d704038746c8"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact campaign statistics informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"from\": \"sendermail@example.com\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"messagesSent\": [\n    {\n      \"campaignId\": 21,\n      \"eventTime\": \"2016-05-03T20:15:13.000Z\"\n    },\n    {\n      \"campaignId\": 42,\n      \"eventTime\": \"2016-10-17T10:30:01.000Z\"\n    },\n    {\n      \"campaignId\": 45,\n      \"eventTime\": \"2016-11-09T11:45:02.000Z\"\n    }\n  ],\n  \"opened\": [\n    {\n      \"campaignId\": 21,\n      \"count\": 2,\n      \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n      \"ip\": \"66.249.93.118\"\n    },\n    {\n      \"campaignId\": 45,\n      \"count\": 1,\n      \"eventTime\": \"2017-01-30T13:56:40.000Z\",\n      \"ip\": \"66.249.93.217\"\n    }\n  ],\n  \"clicked\": [\n    {\n      \"campaignId\": 21,\n      \"links\": [\n        {\n          \"count\": 2,\n          \"eventTime\": \"2016-05-03T21:25:01.000Z\",\n          \"ip\": \"66.249.93.118\",\n          \"url\": \"https://url.domain.com/fbe5387ec717e333628380454f68670010b205ff/1/go?uid={EMAIL}&utm_source=sendinblue&utm_campaign=test_camp&utm_medium=email\"\n        }\n      ]\n    }\n  ],\n  \"delivered\": [\n    {\n      \"campaignId\": 21,\n      \"count\": 2,\n      \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n      \"ip\": \"66.249.93.118\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Folders",
					"item": [
						{
							"name": "Get all folders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes folder id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes name attribute\r",
											"pm.test(\"Body response includes name attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"name\");\r",
											"});\r",
											"// Verify that body response includes uniqueSubscribers attribute\r",
											"pm.test(\"Body response includes uniqueSubscribers attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"uniqueSubscribers\");\r",
											"});\r",
											"// Verify that body response includes totalSubscribers attribute\r",
											"pm.test(\"Body response includes totalSubscribers attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"totalSubscribers\");\r",
											"});\r",
											"// Verify that body response includes totalBlacklisted attribute\r",
											"pm.test(\"Body response includes totalBlacklisted attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"totalBlacklisted\");\r",
											"});\r",
											"// Verify that body response includes folders attribute\r",
											"pm.test(\"Body response includes folders attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"folders\");\r",
											"});\r",
											"// Verify that body response includes folders count attribute\r",
											"pm.test(\"Body response includes folders count attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"count\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "55102114-66fc-48dc-a1ac-b47f59543166"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "(Required) Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "(Required) Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Folders informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"folders\": [\n    {\n      \"id\": 42,\n      \"name\": \"Ninja_Form\",\n      \"totalBlacklisted\": 98,\n      \"totalSubscribers\": 4567,\n      \"uniqueSubscribers\": 4665\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Prestashop\",\n      \"totalBlacklisted\": 10,\n      \"totalSubscribers\": 6543,\n      \"uniqueSubscribers\": 6553\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"folderId\", jsonData.id);\r",
											"\r",
											"// Verify that body response includes folder id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Content-Length is present in headers\r",
											"pm.test(\"Content-Length is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "caf3a437-ce0f-4796-8891-84c53f0de06b"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "8607a6c8-2f1a-4f1e-8548-480f9e2bbd18"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Returns a folder's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify the folder's id\r",
											"pm.test(\"Verify the folder's id\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(10);\r",
											"});\r",
											"// Verify the folder's name\r",
											"pm.test(\"Verify the folder's name\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(\"Wordpress Contacts\");\r",
											"});\r",
											"\r",
											"// Verify that body response includes totalBlacklisted attribute\r",
											"pm.test(\"Body response includes totalBlacklisted attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"totalBlacklisted\");\r",
											"});\r",
											"// Verify that body response includes uniqueSubscribers attribute\r",
											"pm.test(\"Body response includes uniqueSubscribers attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"uniqueSubscribers\");\r",
											"});\r",
											"// Verify that body response includes totalSubscribers attribute\r",
											"pm.test(\"Body response includes totalSubscribers attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"totalSubscribers\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "4a4ae678-d363-4529-9924-b27724d0ab72"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "10",
											"description": "(Required) id of the folder",
											"uuid": "b1556d7d-104b-4535-aec2-a77ce44ee87f"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"name\": \"Client_Folder\",\n  \"totalBlacklisted\": 987,\n  \"totalSubscribers\": 16778,\n  \"uniqueSubscribers\": 17765\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get lists in a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has a OK string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//Verify the response time is less than 600ms\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"// Verify that vary is present in headers\r",
											"pm.test(\"vary is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"vary\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "9a506026-e524-4c8f-9b18-97e24bf545b6"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId",
										"lists"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									],
									"variable": [
										{
											"key": "folderId",
											"value": "10",
											"description": "(Required) Id of the folder",
											"uuid": "f32e7d68-f6f2-4218-9a46-3497c460e4e0"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder's Lists details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"lists\": [\n    {\n      \"id\": 46,\n      \"name\": \"Reactiv\",\n      \"totalSubscribers\": 7655,\n      \"totalBlacklisted\": 0,\n      \"uniqueSubscribers\": 7655\n    },\n    {\n      \"id\": 41,\n      \"name\": \"NY_Area\",\n      \"totalSubscribers\": 3654,\n      \"totalBlacklisted\": 23,\n      \"uniqueSubscribers\": 3677\n    },\n    {\n      \"id\": 22,\n      \"name\": \"VIP_Customer\",\n      \"totalSubscribers\": 8753,\n      \"totalBlacklisted\": 72,\n      \"uniqueSubscribers\": 8825\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"// Verify that vary is present in headers\r",
											"pm.test(\"vary is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"vary\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "1449e706-7b00-4fdb-9708-5812797e01e3"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "a9fcf43a-05e7-4650-bcc5-2b9a8eb1c158"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Wordpress New Contacts\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "{{folderId}}",
											"description": "(Required) Id of the folder",
											"uuid": "2c738ba6-1e23-4b3d-87b1-a8312638b33b"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a folder (and all its lists)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"// Verify that vary is present in headers\r",
											"pm.test(\"vary is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"vary\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "7f6aa7cf-86a1-4acb-8e7c-58a1a8abc873"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "{{folderId}}",
											"description": "(Required) Id of the folder",
											"uuid": "c2c690c5-8da2-48d8-93e8-109f1d5c5728"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists",
					"item": [
						{
							"name": "Get all the lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes list id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"// Verify that body response includes name attribute\r",
											"pm.test(\"Body response includes name attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"name\");\r",
											"});\r",
											"// Verify that body response includes folderId attribute\r",
											"pm.test(\"Body response includes folderId attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"folderId\");\r",
											"});\r",
											"// Verify that body response includes uniqueSubscribers attribute\r",
											"pm.test(\"Body response includes uniqueSubscribers attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"uniqueSubscribers\");\r",
											"});\r",
											"// Verify that body response includes totalSubscribers attribute\r",
											"pm.test(\"Body response includes totalSubscribers attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"totalSubscribers\");\r",
											"});\r",
											"// Verify that body response includes totalBlacklisted attribute\r",
											"pm.test(\"Body response includes totalBlacklisted attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"totalBlacklisted\");\r",
											"});\r",
											"// Verify that body response includes lists attribute\r",
											"pm.test(\"Body response includes lists attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"lists\");\r",
											"});\r",
											"// Verify that body response includes folders count attribute\r",
											"pm.test(\"Body response includes folders count attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"count\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "bd362989-0d4e-4691-bb0e-0ad43a7d8162"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "Lists informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"lists\": [\n    {\n      \"id\": 53,\n      \"name\": \"Spanish_Speakers\",\n      \"totalSubscribers\": 5432,\n      \"totalBlacklisted\": 65,\n      \"uniqueSubscribers\": 5497,\n      \"folderId\": 1\n    },\n    {\n      \"id\": 50,\n      \"name\": \"Other\",\n      \"totalSubscribers\": 10976,\n      \"totalBlacklisted\": 765,\n      \"uniqueSubscribers\": 11741,\n      \"folderId\": 2\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a list's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify the list's id\r",
											"pm.test(\"Verify the list's id\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(7);\r",
											"});\r",
											"// Verify the list's name\r",
											"pm.test(\"Verify the list's name\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(\"MyList\");\r",
											"});\r",
											"\r",
											"// Verify that body response includes totalBlacklisted attribute\r",
											"pm.test(\"Body response includes totalBlacklisted attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"totalBlacklisted\");\r",
											"});\r",
											"// Verify that body response includes uniqueSubscribers attribute\r",
											"pm.test(\"Body response includes uniqueSubscribers attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"uniqueSubscribers\");\r",
											"});\r",
											"// Verify that body response includes totalSubscribers attribute\r",
											"pm.test(\"Body response includes totalSubscribers attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"totalSubscribers\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "d9d85b86-dbad-4d8c-8172-b13c1af79464"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "7",
											"description": "(Required) Id of the list",
											"uuid": "175c4263-0165-4994-bb10-4b2d132a9baa"
										}
									]
								}
							},
							"response": [
								{
									"name": "List informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 12,\n  \"name\": \"Newsletter_Weekly\",\n  \"totalSubscribers\": 6533,\n  \"totalBlacklisted\": 63,\n  \"uniqueSubscribers\": 6596,\n  \"folderId\": 1,\n  \"createdAt\": \"2016-02-26T11:56:08.000Z\",\n  \"campaignStats\": [\n    {\n      \"campaignId\": 15,\n      \"stats\": {\n        \"uniqueClicks\": 701,\n        \"clickers\": 789,\n        \"complaints\": 0,\n        \"delivered\": 6632,\n        \"sent\": 6645,\n        \"softBounces\": 34,\n        \"hardBounces\": 4,\n        \"uniqueViews\": 3442,\n        \"unsubscriptions\": 4,\n        \"viewed\": 4322,\n        \"deferred\": 0\n      }\n    },\n    {\n      \"campaignId\": 45,\n      \"stats\": {\n        \"uniqueClicks\": 654,\n        \"clickers\": 788,\n        \"complaints\": 1,\n        \"delivered\": 4078,\n        \"sent\": 4334,\n        \"softBounces\": 18,\n        \"hardBounces\": 2,\n        \"uniqueViews\": 987,\n        \"unsubscriptions\": 4,\n        \"viewed\": 1555,\n        \"deferred\": 0\n      }\n    }\n  ],\n  \"dynamicList\": false\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"listId\", jsonData.id);\r",
											"\r",
											"// Verify that body response includes list id\r",
											"pm.test(\"Body response includes id attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Content-Length is present in headers\r",
											"pm.test(\"Content-Length is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "c9109707-2c7a-4485-9384-dd3fd59ad4a5"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "e2c5905f-a209-4d73-80c7-16490593542a"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"folderId\": 10,\n  \"name\": \"{{$randomLastName}} Customer\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"folderId\": 2,\n  \"name\": \"Magento Customer - ES\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"folderId\": 2,\n  \"name\": \"Magento Customer - ES\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Add existing contacts to a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes contacts attribute\r",
											"pm.test(\"Body response includes contacts attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"contacts\");\r",
											"});\r",
											"// Verify that body response includes success attribute\r",
											"pm.test(\"Body response includes success attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"// Verify that body response includes contact's email string\r",
											"pm.test(\"Body response includes contact's email\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"jane@gmail.com\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "a75fa6e3-06a4-48e4-ae42-64321e9ef76a"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "7db91b07-0c6f-4811-98c7-77abb7b723d7"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emails\": [\n    \"jane@gmail.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts",
										"add"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listId}}",
											"description": "(Required) Id of the list",
											"uuid": "c385af9f-f43c-4c18-b9ba-b0fe213e9e15"
										}
									]
								}
							},
							"response": [
								{
									"name": "All contacts have been added successfully to the list with details of failed ones",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ],\n  \"failure\": [\n    \"david@example.com\"\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get contacts in a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.contacts[0]);\r",
											"\r",
											"// Verify the contact's email\r",
											"pm.test(\"Verify the contact's email\", function () {\r",
											"    pm.expect(jsonData.contacts[0].email).to.eql(\"jane@gmail.com\");\r",
											"});\r",
											"// Verify the contact's id\r",
											"pm.test(\"Verify the contact's id\", function () {\r",
											"    pm.expect(jsonData.contacts[0].id).to.eql(3);\r",
											"});\r",
											"\r",
											"// Verify the count\r",
											"pm.test(\"Verify the count\", function () {\r",
											"    pm.expect(jsonData.count).to.eql(1);\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "c9b5d065-e462-4122-be50-2a737cca85ca"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts"
									],
									"query": [
										{
											"key": "modifiedSince",
											"value": "veniam elit in",
											"description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listId}}",
											"description": "(Required) Id of the list",
											"uuid": "81257060-c8d7-427a-9264-e8be4e09a9cf"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contacts\": [\n    {\n      \"email\": \"alex.pain@example.com\",\n      \"id\": 45,\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12,\n        9,\n        20\n      ],\n      \"listUnsubscribed\": [\n        1,\n        2\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Pain\",\n        \"FIRSTNAME\": \"Alex\",\n        \"DOB\": \"2010-12-31T00:00:00.000Z\",\n        \"GENDER\": \"Kid\"\n      }\n    },\n    {\n      \"email\": \"john.smith@example.com\",\n      \"id\": 32,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12\n      ],\n      \"listUnsubscribed\": [\n        1\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Smith\",\n        \"FIRSTNAME\": \"John\",\n        \"DOB\": \"1986-06-21T00:00:00.000Z\",\n        \"GENDER\": \"Men\"\n      }\n    },\n    {\n      \"email\": \"helen.rose@example.com\",\n      \"id\": 65,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12,\n        9,\n        20\n      ],\n      \"listUnsubscribed\": [\n        1\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Rose\",\n        \"FIRSTNAME\": \"Helen\",\n        \"DOB\": \"1988-11-02T00:00:00.000Z\",\n        \"GENDER\": \"Women\",\n        \"SMS\": \"3375599887766\"\n      }\n    }\n  ],\n  \"count\": 17655\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a contact from a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that body response includes contacts attribute\r",
											"pm.test(\"Body response includes contacts attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"contacts\");\r",
											"});\r",
											"// Verify that body response includes success attribute\r",
											"pm.test(\"Body response includes success attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"// Verify that body response includes contact's email string\r",
											"pm.test(\"Body response includes contact's email\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"jane@gmail.com\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "287ef108-7db9-4bed-874f-d88a194e2dd3"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "a42c9687-c3a4-4eb4-bc91-1a4f9ecf6962"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emails\": [\n    \"jane@gmail.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts",
										"remove"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listId}}",
											"description": "(Required) Id of the list",
											"uuid": "74b9a8be-44a4-451d-b90b-bfe720098b28"
										}
									]
								}
							},
							"response": [
								{
									"name": "All contacts have been removed successfully from the list with details of failed ones",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ],\n  \"failure\": [\n    \"david@example.com\"\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"// Verify that vary is present in headers\r",
											"pm.test(\"vary is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"vary\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "64176e9e-0a15-4518-8c29-f31e983a95eb"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "dbee2aea-f0f6-4a32-9f8b-8484606789c8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{$randomLastName}} Customer\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listId}}",
											"description": "(Required) Id of the list",
											"uuid": "3cbbbb13-8e76-44db-a6ba-ba38d3ce241e"
										}
									]
								}
							},
							"response": [
								{
									"name": "List updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"// Verify that vary is present in headers\r",
											"pm.test(\"vary is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"vary\");\r",
											"});\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "9f4e185c-9b85-4c62-8f8c-01df332f9dad"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{listId}}",
											"description": "(Required) Id of the list",
											"uuid": "c46b57c0-4775-4daf-9eaa-ddf083bc55ae"
										}
									]
								}
							},
							"response": [
								{
									"name": "List deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Attributes",
					"item": [
						{
							"name": "List all attributes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.attributes[4].name);\r",
											"pm.environment.set(\"attributeName\", jsonData.attributes[4].name);\r",
											"\r",
											"// Verify that body response includes name attribute\r",
											"pm.test(\"Body response includes name attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"name\");\r",
											"});\r",
											"// Verify that body response includes category attribute\r",
											"pm.test(\"Body response includes category attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"category\");\r",
											"});\r",
											"// Verify that body response includes type attribute\r",
											"pm.test(\"Body response includes type attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"type\");\r",
											"});\r",
											"// Verify that body response includes calculatedValue attribute\r",
											"pm.test(\"Body response includes calculatedValue attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"calculatedValue\");\r",
											"});\r",
											"// Verify that body response includes field_key attribute\r",
											"pm.test(\"Body response includes field_key attribute\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"field_key\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"// Verify that Transfer-Encoding is present in headers\r",
											"pm.test(\"Transfer-Encoding is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "aad0e018-dda6-46c0-915e-50c3bb021cc4"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes"
									]
								}
							},
							"response": [
								{
									"name": "Attributes listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributes\": [\n    {\n      \"name\": \"LASTNAME\",\n      \"category\": \"normal\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"FIRSTNAME\",\n      \"category\": \"normal\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"DOB\",\n      \"category\": \"normal\",\n      \"type\": \"date\"\n    },\n    {\n      \"name\": \"GENDER\",\n      \"category\": \"category\",\n      \"type\": \"text\",\n      \"enumeration\": [\n        {\n          \"value\": 1,\n          \"label\": \"Men\"\n        },\n        {\n          \"value\": 2,\n          \"label\": \"Women\"\n        },\n        {\n          \"value\": 3,\n          \"label\": \"Kid\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create contact attribute",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Status code name has a Created string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "44c9dc48-6368-403b-98a0-5304cd8f94db"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "39970bc8-820f-4ea6-8dd3-a306b2bb96b9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"isRecurring\": true\n  /*\"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"*/\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"key": "attributeCategory",
											"value": "global",
											"description": "(Required) Category of the attribute",
											"uuid": "a16e7806-0666-4a9f-86ef-481ff7d22893"
										},
										{
											"key": "attributeName",
											"value": "{{$randomFirstName}}_Attribute",
											"description": "(Required) Name of the attribute",
											"uuid": "583a8ae3-56d4-449e-9d4f-bc9451a32592"
										}
									]
								}
							},
							"response": [
								{
									"name": "Attribute created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the attribute"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update contact attribute",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"// Verify that CF-RAY is present in headers\r",
											"pm.test(\"CF-RAY is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "5a4171c7-0e01-4f3b-a021-810fa5654f64"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "bbe26828-9a23-4beb-8549-92bb75e22b63"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"isRecurring\": false\n  /*\"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]*/\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"key": "attributeCategory",
											"value": "global",
											"description": "(Required) Category of the attribute",
											"uuid": "724bc516-61c3-4d21-a1fb-d7d0b776bc46"
										},
										{
											"key": "attributeName",
											"value": "{{attributeName}}",
											"description": "(Required) Name of the existing attribute",
											"uuid": "3e5d7c68-207a-44df-9e54-32c582b2b641"
										}
									]
								}
							},
							"response": [
								{
									"name": "Attribute updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Attribute not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an attribute",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"// Verify that Server is present in headers\r",
											"pm.test(\"Server is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "62db4bd7-b123-4ca0-8a8d-047fdd2e4127"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"key": "attributeCategory",
											"value": "global",
											"description": "(Required) Category of the attribute",
											"uuid": "ee825afd-6c4e-40d6-b026-00db8e0ef875"
										},
										{
											"key": "attributeName",
											"value": "{{attributeName}}",
											"description": "(Required) Name of the existing attribute",
											"uuid": "12e49b35-64b7-45f2-84ab-9366a219e4b1"
										}
									]
								}
							},
							"response": [
								{
									"name": "Attribute deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Attribute not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Transactional",
			"item": [
				{
					"name": "Email API",
					"item": [
						{
							"name": "Send a transactional email",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "32f16570-a454-4f74-8ee4-b89aa418d9b7"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "b1db3c7f-8263-44bf-b85c-9bf41873f006"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sender\": {\n    \"name\": \"Wiza Inc\",\n    \"email\": \"bethany.klocko@hotmail.com\"\n  },\n  \"to\": [\n    {\n      \"email\": \"mauricio+unsubtest@sendinblue.com\",\n      \"name\": \"mauricio\"\n    }\n  ],\n  \"templateId\": 69\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"email"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "transactional email sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"name": "transactional email scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Batch send transactional emails",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the list of transactional emails on the basis of allowed filters",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "de0940a0-63f8-4350-aae4-a5ed937f1425"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emails?email=veniam elit in&templateId=13396752&messageId=veniam elit in&startDate=veniam elit in&endDate=veniam elit in&sort=desc&limit=500&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emails"
									],
									"query": [
										{
											"key": "email",
											"value": "veniam elit in",
											"description": "**Mandatory if templateId and messageId are not passed in query filters.** Email address to which transactional email has been sent.\n"
										},
										{
											"key": "templateId",
											"value": "13396752",
											"description": "**Mandatory if email and messageId are not passed in query filters.** Id of the template that was used to compose transactional email.\n"
										},
										{
											"key": "messageId",
											"value": "veniam elit in",
											"description": "**Mandatory if templateId and email are not passed in query filters.** Message ID of the transactional email sent.\n"
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) from which you want to fetch the list. **Maximum time period that can be selected is one month**.\n"
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) till which you want to fetch the list. **Maximum time period that can be selected is one month.**\n"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page"
										}
									]
								},
								"description": "This endpoint will show the list of emails for past 30 days by default. To retrieve emails before that time, please pass startDate and endDate in query filters."
							},
							"response": [
								{
									"name": "List of transactional emails",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails?email=veniam elit in&templateId=13396752&messageId=veniam elit in&startDate=veniam elit in&endDate=veniam elit in&sort=desc&limit=500&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails"
											],
											"query": [
												{
													"key": "email",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 120,\n  \"transactionalEmails\": [\n    {\n      \"email\": \"abc@xyz.com\",\n      \"subject\": \"summer camp\",\n      \"templateId\": 15,\n      \"messageId\": \"<201798300811.5787683@relay.domain.com>\",\n      \"uuid\": \"5a78c-209ok98262910-std2341\",\n      \"date\": \"2019-05-25T11:53:26.000Z\"\n    },\n    {\n      \"email\": \"test@test.com\",\n      \"subject\": \"details verification\",\n      \"templateId\": 15,\n      \"messageId\": \"<201798300811.5700093@relay.domain.com>\",\n      \"uuid\": \"5a78c-209ok98262910-s99a341\",\n      \"date\": \"2019-05-25T07:28:11.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails?email=veniam elit in&templateId=13396752&messageId=veniam elit in&startDate=veniam elit in&endDate=veniam elit in&sort=desc&limit=500&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails"
											],
											"query": [
												{
													"key": "email",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete scheduled emails by batchId or messageId",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "c884a7d2-62f1-46db-9ebc-6d545b231f15"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/email/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"email",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
											"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email.",
											"uuid": "89a69a40-7cf3-4652-b104-2a573134eea2"
										}
									]
								},
								"description": "Delete scheduled batch of emails by batchId or single scheduled email by messageId"
							},
							"response": [
								{
									"name": "Scheduled email(s) deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid parameters passed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Record(s) for identifier not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the personalized content of a sent transactional email",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "6098f6c7-d9f3-4b78-a0a1-59b5aec696cd"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emails/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emails",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "veniam elit in",
											"description": "(Required) Unique id of the transactional email that has been sent to a particular contact",
											"uuid": "5b6d1c08-9a12-4c23-bbd2-8a5f34a41147"
										}
									]
								}
							},
							"response": [
								{
									"name": "Transactional email content",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) Unique id of the transactional email that has been sent to a particular contact"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"abc@example.com\",\n  \"subject\": \"Summer Camps\",\n  \"templateId\": 12,\n  \"date\": \"2016-02-25T11:53:26.000Z\",\n  \"events\": [\n    {\n      \"name\": \"sent\",\n      \"time\": \"2016-02-25T11:53:26.000Z\"\n    },\n    {\n      \"name\": \"delivered\",\n      \"time\": \"2016-02-25T11:55:26.000Z\"\n    },\n    {\n      \"name\": \"opened\",\n      \"time\": \"2016-02-26T09:53:26.000Z\"\n    }\n  ],\n  \"body\": \"<!DOCTYPE html> <html> <body> <h1>Greetings from the team</h1> <p>This is the actual html content sent</p> </body> </html>\"\n}"
								}
							]
						},
						{
							"name": "Fetch scheduled emails by batchId or messageId",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "5a7337fe-e991-4c5d-8905-e445199ba220"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emailStatus",
										":identifier"
									],
									"query": [
										{
											"key": "startDate",
											"value": "2022-02-02",
											"description": "Mandatory if `endDate` is used. Starting date (YYYY-MM-DD) from which you want to fetch the list. Can be maximum 30 days older tha current date."
										},
										{
											"key": "endDate",
											"value": "2022-03-02",
											"description": "Mandatory if `startDate` is used. Ending date (YYYY-MM-DD) till which you want to fetch the list. Maximum time period that can be selected is one month."
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed. Not valid when identifier is `messageId`."
										},
										{
											"key": "status",
											"value": "queued",
											"description": "Filter the records by `status` of the scheduled email batch or message. Not valid when identifier is `messageId`."
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of documents returned per page. Not valid when identifier is `messageId`."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page.  Not valid when identifier is `messageId`."
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
											"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email.",
											"uuid": "417b8691-8757-47c6-9ad2-24f546601d66"
										}
									]
								},
								"description": "Fetch scheduled batch of emails by batchId or single scheduled email by messageId (Can retrieve data upto 30 days old)"
							},
							"response": [
								{
									"name": "Scheduled email batches",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 3,\n  \"batches\": [\n    {\n      \"scheduledAt\": \"2022-02-28T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-26T11:36:43.576000000Z\",\n      \"status\": \"queued\"\n    },\n    {\n      \"scheduledAt\": \"2022-02-25T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-24T11:36:43.576000000Z\",\n      \"status\": \"processed\"\n    },\n    {\n      \"scheduledAt\": \"2022-02-26T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-25T11:36:43.576000000Z\",\n      \"status\": \"inProgress\"\n    }\n  ]\n}"
								},
								{
									"name": "Invalid parameters passed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Record(s) for identifier not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Templates",
					"item": [
						{
							"name": "Get the list of email templates",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "00976e08-8418-43f5-998c-dd506f657937"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates?templateStatus=false&limit=50&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates"
									],
									"query": [
										{
											"key": "templateStatus",
											"value": "false",
											"description": "Filter on the status of the template. Active = true, inactive = false"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "transactional email templates informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates?templateStatus=false&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											],
											"query": [
												{
													"key": "templateStatus",
													"value": "false"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 2,\n  \"templates\": [\n    {\n      \"id\": 5,\n      \"name\": \"ChristomasTimeTemplate\",\n      \"subject\": \"Merry Christmas\",\n      \"isActive\": false,\n      \"testSent\": false,\n      \"sender\": {\n        \"name\": \"John\",\n        \"email\": \"john.smith@example.com\",\n        \"id\": 23\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"\",\n      \"tag\": \"Festival\",\n      \"htmlContent\": \"HTML CONTENT 1\",\n      \"createdAt\": \"2016-02-24T14:44:24.000Z\",\n      \"modifiedAt\": \"2016-02-24T15:37:11.000Z\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"SummerSales2017Template\",\n      \"subject\": \"Enjoy our summer Sales !\",\n      \"isActive\": true,\n      \"testSent\": false,\n      \"sender\": {\n        \"name\": \"John\",\n        \"email\": \"john.smith@example.com\",\n        \"id\": 23\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"\",\n      \"tag\": \"Summer\",\n      \"htmlContent\": \"HTML CONTENT 2\",\n      \"createdAt\": \"2016-02-25T11:53:26.000Z\",\n      \"modifiedAt\": \"2016-02-25T11:53:26.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates?templateStatus=false&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											],
											"query": [
												{
													"key": "templateStatus",
													"value": "false"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create an email template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "6782e3fc-6384-4416-872b-0aeeacf8943b"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "b1b43e8b-8d19-474d-80f0-4aa38f3bf359"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sender\":{\n    \"name\": \"Wiza Inc\",\n//  \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"subject\": \"Thanks for your purchase !\",\n  \"templateName\": \"Order Confirmation - EN\",\n  \"tag\": \"OrderConfirmation\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  //\"htmlUrl\": \"https://html.domain.com\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  //\"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"subject\": \"Thanks for your purchase !\",\n  \"templateName\": \"Order Confirmation - EN\",\n  \"tag\": \"OrderConfirmation\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"subject\": \"Thanks for your purchase !\",\n  \"templateName\": \"Order Confirmation - EN\",\n  \"tag\": \"OrderConfirmation\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Returns the template information",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "44c00bbc-1940-4a1d-b515-579d8b912a6d"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "13396752",
											"description": "(Required) id of the template",
											"uuid": "573e82b3-858b-4fcf-83cd-d7ee96c63fbb"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email template informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 33,\n  \"name\": \"OrderConfirmation\",\n  \"subject\": \"Order Confirmation : Thanks for your Purchase !\",\n  \"isActive\": true,\n  \"testSent\": false,\n  \"sender\": {\n    \"name\": \"John\",\n    \"email\": \"john.smith@example.com\",\n    \"id\": 26\n  },\n  \"replyTo\": \"replyto@domain.com\",\n  \"toField\": \"\",\n  \"tag\": \"\",\n  \"htmlContent\": \"HTML CONTENT 4\",\n  \"createdAt\": \"2016-02-25T11:53:26.000Z\",\n  \"modifiedAt\": \"2016-02-25T11:53:26.000Z\",\n  \"doiTemplate\": false\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an email template",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "5b04d1bd-763f-4d88-9644-3ca735bdcd0a"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "05f120b4-d897-45c3-a30f-1399607b84ae"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "13396752",
											"description": "(Required) id of the template",
											"uuid": "08fb8fe7-c52e-48ee-8f12-63843df69acb"
										}
									]
								}
							},
							"response": [
								{
									"name": "transactional email template updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an inactive email template",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "89d9c7b9-74b1-4f78-8a74-3761ea8efd03"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "13396752",
											"description": "(Required) id of the template",
											"uuid": "66578ec6-37f8-4371-b8dc-f17c06e69edf"
										}
									]
								}
							},
							"response": [
								{
									"name": "Inactive transactional email template has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send a template to your test list",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "766a55cb-dfc5-4e8a-b2eb-195c84740887"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "b8c7d7a7-563e-4013-b8ae-fe88c7feb798"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId",
										"sendTest"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "13396752",
											"description": "(Required) Id of the template",
											"uuid": "c6be90c4-a69d-4789-b420-a0e6f74b7694"
										}
									]
								}
							},
							"response": [
								{
									"name": "Test email has been sent successfully to all recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test email could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"XUvXs2MUkZy@eNdDZoaehFi.etn\",\n    \"HnrmUyMYn@sfTjWkSBpk.hm\"\n  ],\n  \"withoutListEmails\": [\n    \"qSPfAA-ZR9R@CdCUpePDRUIlyeX.js\",\n    \"hoJRuR3l@MHrCixtPTEHuYek.hs\"\n  ],\n  \"blackListedEmails\": [\n    \"wjSlx1vUDTsWt5@SzwzihE.ot\",\n    \"LO4E3a@ycxq.ri\"\n  ]\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Statistics",
					"item": [
						{
							"name": "Get your transactional email activity aggregated over a period of time",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body matches requests string\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"requests\");\r",
											"});\r",
											"// Verify that body matches delivered string\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"delivered\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "91c6a435-7368-4b27-9fa5-8ce156eb3845"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport?days=90",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"statistics",
										"aggregatedReport"
									],
									"query": [
										{
											"key": "startDate",
											"value": "2024-02-31",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD). Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "2024-04-30",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD). Must be greater than equal to startDate\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "90",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n"
										},
										{
											"key": "tag",
											"value": "",
											"description": "Tag of the emails",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will show the aggregated stats for past 90 days by default if `startDate` and `endDate` OR `days` is not passed. The date range can not exceed 90 days"
							},
							"response": [
								{
									"name": "Aggregated report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"range\": \"2016-09-08|2017-04-28\",\n  \"requests\": 19887,\n  \"delivered\": 18996,\n  \"hardBounces\": 234,\n  \"softBounces\": 1533,\n  \"clicks\": 9987,\n  \"uniqueClicks\": 8766,\n  \"opens\": 17654,\n  \"uniqueOpens\": 13688,\n  \"spamReports\": 1,\n  \"blocked\": 2,\n  \"invalid\": 0,\n  \"unsubscribed\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get your transactional email activity aggregated per day",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body matches reports string\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"reports\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in header\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "932a08f1-305e-43bc-9f25-b055c177dfbf"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&startDate=2024-04-01&endDate=2024-04-30&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"statistics",
										"reports"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page"
										},
										{
											"key": "startDate",
											"value": "2024-04-01",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD)\n"
										},
										{
											"key": "endDate",
											"value": "2024-04-30",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD)\n"
										},
										{
											"key": "days",
											"value": "30",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n",
											"disabled": true
										},
										{
											"key": "tag",
											"value": "veniam elit in",
											"description": "Tag of the emails",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "Aggregated report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"reports\": [\n    {\n      \"date\": \"2017-04-30T00:00:00.000Z\",\n      \"requests\": 10756,\n      \"delivered\": 10103,\n      \"hardBounces\": 21,\n      \"softBounces\": 137,\n      \"clicks\": 1026,\n      \"uniqueClicks\": 720,\n      \"opens\": 5091,\n      \"uniqueOpens\": 2318,\n      \"spamReports\": 0,\n      \"blocked\": 519,\n      \"invalid\": 1,\n      \"unsubscribed\": 0\n    },\n    {\n      \"date\": \"2017-05-01T00:00:00.000Z\",\n      \"requests\": 18812,\n      \"delivered\": 17499,\n      \"hardBounces\": 34,\n      \"softBounces\": 254,\n      \"clicks\": 1514,\n      \"uniqueClicks\": 1090,\n      \"opens\": 10089,\n      \"uniqueOpens\": 4393,\n      \"spamReports\": 0,\n      \"blocked\": 920,\n      \"invalid\": 2,\n      \"unsubscribed\": 3\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all your transactional email activity (unaggregated events)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that Content-Type is present in header\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"// Verify that CF-Ray is present in header\r",
											"pm.test(\"CF-Ray is present\", function () {\r",
											"    pm.response.to.have.header(\"CF-Ray\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "72ae254e-3939-4cc0-9cb0-29d55a66038f"
									}
								],
								"url": {
									"raw": "https://api.sendinblue.com/v3/smtp/statistics/events?days=11&messageId=202212281024.62341432715@smtp-relay.mailin.fr",
									"protocol": "https",
									"host": [
										"api",
										"sendinblue",
										"com"
									],
									"path": [
										"v3",
										"smtp",
										"statistics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number limitation for the result returned",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from.",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD). Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD). Must be greater than equal to startDate\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "11",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n"
										},
										{
											"key": "email",
											"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml",
											"description": "Filter the report for a specific email addresses",
											"disabled": true
										},
										{
											"key": "event",
											"value": "invalid",
											"description": "Filter the report for a specific event type",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "veniam elit in",
											"description": "Filter the report for tags (serialized and urlencoded array)",
											"disabled": true
										},
										{
											"key": "messageId",
											"value": "202212281024.62341432715@smtp-relay.mailin.fr",
											"description": "Filter on a specific message id"
										},
										{
											"key": "templateId",
											"value": "13396752",
											"description": "Filter on a specific template id",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will show the aggregated stats for past 30 days by default if `startDate` and `endDate` OR `days` is not passed. The date range can not exceed 90 days"
							},
							"response": [
								{
									"name": "Email events report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/events?limit=50&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&email=2RGqj@OVCPsUENXisekVnjFnfB.xml&event=invalid&tags=veniam elit in&messageId=veniam elit in&templateId=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "email",
													"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml"
												},
												{
													"key": "event",
													"value": "invalid"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"events\": [\n    {\n      \"email\": \"john.smith@example.com\",\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"messageId\": \"<201798300811.5787683@example.domain.com>\",\n      \"event\": \"deferred\",\n      \"reason\": \"Error connection timeout\",\n      \"tag\": \"OrderConfirmation\",\n      \"from\": \"john@example.com\",\n      \"templateId\": 4\n    },\n    {\n      \"email\": \"john.smith@example.com\",\n      \"date\": \"2017-03-13T16:30:00.000Z\",\n      \"messageId\": \"<201798300811.5787683@example.domain.com>\",\n      \"event\": \"delivered\",\n      \"tag\": \"OrderConfirmation\",\n      \"from\": \"john@example.com\",\n      \"templateId\": 5\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/events?limit=50&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&email=2RGqj@OVCPsUENXisekVnjFnfB.xml&event=invalid&tags=veniam elit in&messageId=veniam elit in&templateId=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "email",
													"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml"
												},
												{
													"key": "event",
													"value": "invalid"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Blocked Contacts",
					"item": [
						{
							"name": "Get the list of blocked or unsubscribed transactional contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body matches contacts string\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"contacts\");\r",
											"});\r",
											"// Verify that body matches count string\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"count\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "c53951a9-8904-4099-a50b-f250ed5b4733"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedContacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedContacts"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) from which you want to fetch the blocked or unsubscribed contacts\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) till which you want to fetch the blocked or unsubscribed contacts\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents returned per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page",
											"disabled": true
										},
										{
											"key": "senders",
											"value": "ullamco,dolor elit aute",
											"description": "Comma separated list of emails of the senders from which contacts are blocked or unsubscribed",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "List of blocked or unsubscribed transactional contacts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts?startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&senders=ullamco nostrud,occaecat in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "senders",
													"value": "ullamco nostrud,occaecat in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 1,\n  \"contacts\": [\n    {\n      \"email\": \"abc@xyz.com\",\n      \"senderEmail\": \"ez312@gmal.com\",\n      \"reason\": {\n        \"message\": \"Admin blocked\",\n        \"code\": \"adminBlocked\"\n      },\n      \"blockedAt\": \"2017-05-01T12:30:00.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts?startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&senders=ullamco nostrud,occaecat in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "senders",
													"value": "ullamco nostrud,occaecat in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Unblock or resubscribe a transactional contact",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "af249e1d-55ee-4340-a2e6-82a6b5bfddc2"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedContacts",
										":email"
									],
									"variable": [
										{
											"key": "email",
											"value": "veniam elit in",
											"description": "(Required) contact email (urlencoded) to unblock.",
											"uuid": "4e29a3e5-b75c-4ca7-a1b7-e2efe2829e94"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact unblocked",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact email not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Blocked Domains",
					"item": [
						{
							"name": "Get the list of blocked domains",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body matches domains string\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"domains\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "336c4a59-64ce-492d-b1dd-fb2cab70793c"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedDomains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedDomains"
									]
								},
								"description": "Get the list of blocked domains"
							},
							"response": [
								{
									"name": "List of blocked domains",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"domains\": [\n    \"example.com\",\n    \"testdomain.com\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Add a new domain to the list of blocked domains",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Status code name has a Created string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "ddef87eb-d1cf-4786-98ef-d1ef5f1046e0"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "a6b3c2ff-5a81-4ce0-8035-eb74336edca8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": \"example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedDomains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedDomains"
									]
								},
								"description": "Blocks a new domain in order to avoid messages being sent to the same"
							},
							"response": [
								{
									"name": "Domain is successfully blocked",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Unblock an existing domain from the list of blocked domains",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "5d8a782d-1f35-4fb9-a2b3-91fe06b5245c"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedDomains",
										":domain"
									],
									"variable": [
										{
											"key": "domain",
											"value": "example.com",
											"description": "(Required) The name of the domain to be deleted",
											"uuid": "649d316a-efb6-45c5-a411-c4e94ad7c60e"
										}
									]
								},
								"description": "Unblocks an existing domain from the list of blocked domains"
							},
							"response": [
								{
									"name": "Domain is successfully deleted from the list of blocked domains",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Domain not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Logs",
					"item": [
						{
							"name": "Delete hardbounces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has a OK string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "23eee86a-85b5-4dd0-8d68-35b9b8e933d7"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "5415598e-47cd-4379-b1fe-fcbbc85f8818"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startDate\": \"2024-04-25\",\n  \"endDate\": \"2024-05-01\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/deleteHardbounces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"deleteHardbounces"
									]
								},
								"description": "Delete hardbounces. To use carefully (e.g. in case of temporary ISP failures)"
							},
							"response": [
								{
									"name": "Hardbounces deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDate\": \"nostrud magna\",\n  \"endDate\": \"incididunt\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/deleteHardbounces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"deleteHardbounces"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDate\": \"nostrud magna\",\n  \"endDate\": \"incididunt\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/deleteHardbounces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"deleteHardbounces"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an SMTP transactional log",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "149fdc79-39b0-4ab9-97e7-f4112513afcf"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/log/:messageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"log",
										":messageId"
									],
									"variable": [
										{
											"key": "messageId",
											"value": "",
											"description": "(Required) MessageId of the transactional log to delete",
											"uuid": "249c0d9d-0553-41ca-a592-0d2828be0156"
										}
									]
								}
							},
							"response": [
								{
									"name": "Transactional Logs deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Message ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Inbound Email Parsing",
					"item": [
						{
							"name": "Get the list of all the events for the received emails.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that body matches events string\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"events\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "310365b4-4a0f-436d-8163-ce1c94c7f027"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/events?limit=100&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"events"
									],
									"query": [
										{
											"key": "sender",
											"value": "veniam elit in",
											"description": "Email address of the sender.",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "1947-08-13",
											"description": "Mandatory if endDate is used. Starting date (YYYY-MM-DD) from which you want to fetch the list. Maximum time period that can be selected is one month.",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "1947-08-13",
											"description": "Mandatory if startDate is used. Ending date (YYYY-MM-DD) till which you want to fetch the list. Maximum time period that can be selected is one month.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of documents returned per page"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation"
										}
									]
								},
								"description": "This endpoint will show the list of all the events for the received emails."
							},
							"response": [
								{
									"name": "List of events for received emails.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events?sender=veniam elit in&startDate=1947-08-13&endDate=1947-08-13&limit=100&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events"
											],
											"query": [
												{
													"key": "sender",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "1947-08-13"
												},
												{
													"key": "endDate",
													"value": "1947-08-13"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"events\": [\n    {\n      \"uuid\": \"1a825d56-029b-4a41-b8e4-1a825d56\",\n      \"date\": \"2017-03-11T12:30:00.000Z\",\n      \"sender\": \"john@example.com\",\n      \"recipient\": \"alexa@example.com\"\n    },\n    {\n      \"uuid\": \"1a825d56-029b-4a41-b8e4-61670463431b\",\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"sender\": \"alice@example.com\",\n      \"recipient\": \"bob@example.com\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events?sender=veniam elit in&startDate=1947-08-13&endDate=1947-08-13&limit=100&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events"
											],
											"query": [
												{
													"key": "sender",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "1947-08-13"
												},
												{
													"key": "endDate",
													"value": "1947-08-13"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Fetch all events history for one particular received email.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "32707172-a6a7-495d-83d2-61d296ba9721"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/events/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"events",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "veniam elit in",
											"description": "(Required) UUID to fetch events specific to recieved email",
											"uuid": "1e02bd60-aaca-4a58-84a2-9f92912570ff"
										}
									]
								},
								"description": "This endpoint will show the list of all events history for one particular received email."
							},
							"response": [
								{
									"name": "Email campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) UUID to fetch events specific to recieved email"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"receivedAt\": \"2017-03-12T12:30:00.000Z\",\n  \"deliveredAt\": \"2017-03-12T12:31:00.000Z\",\n  \"sender\": \"alice@example.com\",\n  \"recipient\": \"bob@example.com\",\n  \"messageId\": \"<a_nice@message.id>\",\n  \"subject\": \"Re: Question about your API\",\n  \"attachments\": [\n    {\n      \"name\": \"invoice.pdf\",\n      \"contentType\": \"application/pdf\",\n      \"contentId\": null,\n      \"contentLength\": 12345\n    }\n  ],\n  \"logs\": [\n    {\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"type\": \"received\"\n    },\n    {\n      \"date\": \"2017-03-12T12:30:04.000Z\",\n      \"type\": \"webhookFailed\"\n    },\n    {\n      \"date\": \"2017-03-12T12:31:04.000Z\",\n      \"type\": \"webhookDelivered\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) UUID to fetch events specific to recieved email"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Retrieve inbound attachment with download token.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream",
										"uuid": "02fa0413-d976-4d15-b226-62ea23e2f0f5"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"attachments",
										":downloadToken"
									],
									"variable": [
										{
											"key": "downloadToken",
											"value": "veniam elit in",
											"description": "(Required) Token to fetch a particular attachment",
											"uuid": "e65e502b-af83-4fc1-9391-2b67c167b5b6"
										}
									]
								},
								"description": "This endpoint will retrieve inbound attachment with download token."
							},
							"response": [
								{
									"name": "Attachment information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"download.png\"",
											"description": ""
										},
										{
											"key": "Content-Length",
											"value": "4032",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/octet-stream"
										}
									],
									"cookie": [],
									"body": "veniam elit in"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "attachment not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Transactional SMS",
					"item": [
						{
							"name": "Send SMS message to a mobile number",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "acb5ed81-b19c-41c9-a031-b592a5ae4412"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "9892ddfd-b92f-4188-a645-1d54e9c6c13e"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/sms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"sms"
									]
								}
							},
							"response": [
								{
									"name": "SMS has been sent successfully to the recipient",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/sms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"sms"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"messageId\": 1511882900176220,\n  \"reference\": \"ab1cde2fgh3i4jklmno\",\n  \"smsCount\": 2,\n  \"usedCredits\": 0.7,\n  \"remainingCredits\": 82.85\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/sms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"sms"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You don't have enough credit to send your SMS. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/sms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"sms"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "SMS statistics",
					"item": [
						{
							"name": "Get your SMS activity aggregated over a period of time",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "23567ad3-e0eb-4fe3-b143-c186eae79752"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"aggregatedReport"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "13396752",
											"description": "Number of days in the past including today (positive integer). **Not compatible with startDate and endDate**\n",
											"disabled": true
										},
										{
											"key": "tag",
											"value": "veniam elit in",
											"description": "Filter on a tag",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Aggregated SMS report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"range\": \"2015-05-22|2017-11-29\",\n  \"requests\": 54,\n  \"delivered\": 16,\n  \"hardBounces\": 5,\n  \"softBounces\": 26,\n  \"blocked\": 4,\n  \"unsubscribed\": 10,\n  \"replied\": 8,\n  \"accepted\": 6,\n  \"rejected\": 14\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get your SMS activity aggregated per day",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CF-RAY is present\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "8b238d3a-c916-43cb-a71c-2c120ec1ae2d"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"reports"
									],
									"query": [
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "13396752",
											"description": "Number of days in the past including today (positive integer). **Not compatible with 'startDate' and 'endDate'**\n",
											"disabled": true
										},
										{
											"key": "tag",
											"value": "veniam elit in",
											"description": "Filter on a tag",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Aggregated SMS report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/reports?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"reports\": [\n    {\n      \"date\": \"2017-04-30T00:00:00.000Z\",\n      \"requests\": 10756,\n      \"delivered\": 10103,\n      \"hardBounces\": 21,\n      \"softBounces\": 137,\n      \"blocked\": 1026,\n      \"unsubscribed\": 720,\n      \"replied\": 5091,\n      \"accepted\": 2318,\n      \"rejected\": 0\n    },\n    {\n      \"date\": \"2017-05-01T00:00:00.000Z\",\n      \"requests\": 18812,\n      \"delivered\": 17499,\n      \"hardBounces\": 34,\n      \"softBounces\": 254,\n      \"blocked\": 1514,\n      \"unsubscribed\": 1090,\n      \"replied\": 10089,\n      \"accepted\": 4393,\n      \"rejected\": 0\n    },\n    {\n      \"date\": \"2017-05-02T00:00:00.000Z\",\n      \"requests\": 14321,\n      \"delivered\": 13427,\n      \"hardBounces\": 16,\n      \"softBounces\": 176,\n      \"blocked\": 1646,\n      \"unsubscribed\": 1170,\n      \"replied\": 11563,\n      \"accepted\": 4689,\n      \"rejected\": 0\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/reports?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all your SMS activity (unaggregated events)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Server is present\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "ce09eeb1-9e99-439c-a539-51ae754abe64"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "days",
											"value": "13396752",
											"description": "Number of days in the past including today (positive integer). **Not compatible with 'startDate' and 'endDate'**\n",
											"disabled": true
										},
										{
											"key": "phoneNumber",
											"value": "veniam elit in",
											"description": "Filter the report for a specific phone number",
											"disabled": true
										},
										{
											"key": "event",
											"value": "bounces",
											"description": "Filter the report for specific events",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "veniam elit in",
											"description": "Filter the report for specific tags passed as a serialized urlencoded array",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Sms events report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/events?limit=50&startDate=veniam elit in&endDate=veniam elit in&offset=0&days=13396752&phoneNumber=veniam elit in&event=bounces&tags=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "phoneNumber",
													"value": "veniam elit in"
												},
												{
													"key": "event",
													"value": "bounces"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"events\": [\n    {\n      \"phoneNumber\": \"00911059469013\",\n      \"date\": \"2015-05-20T12:30:00.000Z\",\n      \"messageId\": \"1473139351170140\",\n      \"event\": \"sent\",\n      \"reason\": \"Recipient is currently unreachable\",\n      \"tag\": \"cabWaiting\"\n    },\n    {\n      \"phoneNumber\": \"00911059469013\",\n      \"date\": \"2015-05-20T16:30:00.000Z\",\n      \"messageId\": \"1473139351170140\",\n      \"event\": \"delivered\",\n      \"reason\": \"Recipient is currently unreachable\",\n      \"tag\": \"cabRequest\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/events?limit=50&startDate=veniam elit in&endDate=veniam elit in&offset=0&days=13396752&phoneNumber=veniam elit in&event=bounces&tags=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "phoneNumber",
													"value": "veniam elit in"
												},
												{
													"key": "event",
													"value": "bounces"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Webhooks",
					"item": [
						{
							"name": "Get all webhooks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.webhooks[1].type);\r",
											"\r",
											"// Verify the type of array[1]\r",
											"pm.test(\"The type of array[1] is marketing\", function () {\r",
											"    pm.expect(jsonData.webhooks[1].type).to.eql(\"marketing\");\r",
											"});\r",
											"\r",
											"// Verify that body response includes webhook test string\r",
											"pm.test(\"Body matches the string webhook test\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"webhook test\");\r",
											"});\r",
											"// Verify that body response includes hardBouncet string\r",
											"pm.test(\"Body matches the string hardBounce\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"hardBounce\");\r",
											"});\r",
											"// Verify that body response includes delivered string\r",
											"pm.test(\"Body matches the string delivered\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"delivered\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "4130cbc9-d207-4a7d-a823-65f41c3e2075"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "type",
											"value": "transactional",
											"description": "Filter on webhook type",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of webhook creation"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhooks informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks?type=transactional&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											],
											"query": [
												{
													"key": "type",
													"value": "transactional"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"webhooks\": [\n    {\n      \"url\": \"https://example.domain.com/webhook/events/kzfxxxxxxxx0uyo1\",\n      \"id\": 9864,\n      \"description\": \"Webhook triggered on campaign openings\",\n      \"events\": [\n        \"opened\"\n      ],\n      \"type\": \"transac\",\n      \"createdAt\": \"2016-07-18T12:30:09.000Z\",\n      \"modifiedAt\": \"2016-07-18T16:00:50.000Z\"\n    },\n    {\n      \"url\": \"http://exmaple.domain.com/15kxxxxxn1\",\n      \"id\": 22770,\n      \"description\": \"Webhook triggered on campaign hard bounces\",\n      \"events\": [\n        \"hardBounces\"\n      ],\n      \"type\": \"marketing\",\n      \"createdAt\": \"2017-02-20T14:30:00.000Z\",\n      \"modifiedAt\": \"2017-02-20T19:00:00.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks?type=transactional&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											],
											"query": [
												{
													"key": "type",
													"value": "transactional"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a webhook",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"webhookId\", jsonData.id);\r",
											"\r",
											"// Verify that response body includes the webhook ID\r",
											"pm.test(\"Verify the response body includes webhook ID\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											"// Verify the status code\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"// Verify that Connection is present in headers\r",
											"pm.test(\"Connection is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Connection\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "e767d449-5525-4be2-9585-3967b0e89501"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "54ec1dee-70b5-4188-a255-117bd61c8093"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"events\": [\n        \"spam\",\n        \"opened\",\n        \"click\",\n        \"hardBounce\",\n        \"softBounce\",\n        \"unsubscribed\",\n        \"listAddition\",\n        \"delivered\"\n    ],\n    \"url\": \"https://webhook.site/{{$randomAlphaNumeric}}ebc5d36-217f-4989-81fd-5f0{{$randomAlphaNumeric}}b49cg\",\n    \"description\": \"webhook test\",\n    \"type\": \"marketing\"\n}\n\n// https://webhook.site/5ebc5d36-217f-4989-81fd-5f02cbb49c6s   {{$randomAlphaNumeric}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"events\": [\n    \"unsubscribed\",\n    \"unsubscribed\"\n  ],\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on unsubscription\",\n  \"type\": \"marketing\",\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"events\": [\n    \"unsubscribed\",\n    \"unsubscribed\"\n  ],\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on unsubscription\",\n  \"type\": \"marketing\",\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a webhook details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.url);\r",
											"console.log(jsonData.id);\r",
											"console.log(jsonData.description);\r",
											"console.log(jsonData.type);\r",
											"console.log(jsonData.events[1]);\r",
											"\r",
											"// Verify the webhook url\r",
											"pm.test(\"Verify the webhook url\", function () {\r",
											"    pm.expect(jsonData.url).to.eql(\"https://webhook.site/5ebc5d36-217f-4989-81fd-5f02cbb49c6d\");\r",
											"});\r",
											"// Verify the webhook id\r",
											"pm.test(\"Verify the webhook id\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(1039571);\r",
											"});\r",
											"// Verify the webhook description\r",
											"pm.test(\"Verify the webhook description\", function () {\r",
											"    pm.expect(jsonData.description).to.eql(\"test for SMS\");\r",
											"});\r",
											"// Verify the webhook type\r",
											"pm.test(\"Verify the webhook type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"marketing\");\r",
											"});\r",
											"\r",
											"// Verify the value of events[1]\r",
											"pm.test(\"Verify the value of events[1]\", function () {\r",
											"    pm.expect(jsonData.events[1]).to.eql(\"opened\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "101fe6e1-70b7-4009-a12f-a4b9ae4fceb7"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "1039571",
											"description": "(Required) Id of the webhook",
											"uuid": "158bbf28-40f0-4562-98af-d6234b47be75"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhook informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"url\": \"http://example.domain.com/1brxxxxxx5p1\",\n  \"id\": 7287,\n  \"description\": \"Webhook triggered on campaign openings and addition of lists\",\n  \"events\": [\n    \"listAdditions\",\n    \"opened\"\n  ],\n  \"type\": \"marketing\",\n  \"createdAt\": \"2016-06-07T09:10:10.000Z\",\n  \"modifiedAt\": \"2016-06-08T11:30:00.000Z\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a webhook",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name hasa No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"//Verify the response time is less than 500ms\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "6845e909-a0c8-4834-bfd2-5510a796f399"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "b75f90ce-31b4-48d6-9c54-b1010651d672"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1{{$randomAlphaNumeric}}\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "{{webhookId}}",
											"description": "(Required) Id of the webhook",
											"uuid": "a00e5453-c4e5-4846-9f55-aa75fe5090cf"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhook updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a webhook",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name hasa No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"//Verify the response time is less than 500ms\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "ed3f67ce-861f-41cb-98f7-cf9d30ddced5"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "{{webhookId}}",
											"description": "(Required) Id of the webhook",
											"uuid": "a2f25096-cdaf-4fc3-9ec5-5566b1d1bbb5"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhook deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Reseller",
					"item": [
						{
							"name": "Credits",
							"item": [
								{
									"name": "Add Email and/or SMS credits to a specific child account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"uuid": "992ffbc6-5f39-4f83-89e4-2d0541b37b5c"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "a331b74e-bf7a-4158-83a4-63c4a9dbd479"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"credits",
												"add"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "2d333a77-06b3-40cc-9c1a-72f5b0383a87"
												}
											]
										}
									},
									"response": [
										{
											"name": "Credits added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"child\": {\n    \"sms\": 500,\n    \"email\": 2000\n  },\n  \"reseller\": {\n    \"sms\": 12900,\n    \"email\": 2000000\n  }\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Remove Email and/or SMS credits from a specific child account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"uuid": "45641419-0266-4c80-8e89-d20e98cf50d2"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "278c9e80-96e1-4a61-b45b-85c9cefa75c2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"credits",
												"remove"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "09df1e8b-0cf1-48ae-b08a-d2c6efa7bd69"
												}
											]
										}
									},
									"response": [
										{
											"name": "Credits removed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"child\": {\n    \"sms\": 500,\n    \"email\": 2000\n  },\n  \"reseller\": {\n    \"sms\": 12900,\n    \"email\": 2000000\n  }\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "IP management",
							"item": [
								{
									"name": "Associate a dedicated IP to the child",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"uuid": "437953f4-a2ab-4869-9134-cd0ce3715a50"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "64bf2516-b6f6-4071-a140-b9868a20fac7"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"ips",
												"associate"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "da2dae09-6b1c-46a5-bc19-16cceb4bb1a1"
												}
											]
										}
									},
									"response": [
										{
											"name": "Dedicated IP is associated to the child",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Dissociate a dedicated IP to the child",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"uuid": "f94b5eb5-6d63-4903-a7c1-a3f5ab1cd468"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "587d8e9d-c1ff-492d-84c8-d1c01801d895"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"ips",
												"dissociate"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "6ab08d70-5054-4185-90c9-c3c2805abc23"
												}
											]
										}
									},
									"response": [
										{
											"name": "Dedicated IP is dissociated from the child",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Domains",
							"item": [
								{
									"name": "Get all sender domains for a specific child account",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "6bb09192-4d20-47cf-b842-c6ea4433e60c"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "bad24492-afd7-4411-8547-d597dcfdb05f"
												}
											]
										}
									},
									"response": [
										{
											"name": "Sender domains of the child",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"domain\": \"mycustomdomain.com\",\n    \"active\": true\n  },\n  {\n    \"domain\": \"mynewdomain.com\",\n    \"active\": true\n  }\n]"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Create a domain for a child account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"uuid": "ea8ff7d1-8f7b-47ac-b51f-9640f6be4d53"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "dade3b19-2da9-4e39-9813-4188f5b0e422"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "e5dff57a-e2d9-4c43-b4e3-22c8e48d6cff"
												}
											]
										}
									},
									"response": [
										{
											"name": "Domain added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update the sender domain of reseller's child based on the childIdentifier and domainName passed",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"uuid": "2cee7f16-4400-45ee-8e56-ebb29b57de99"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "beb49590-35d6-4e99-8ae3-be301e95a933"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains",
												":domainName"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "b812f195-f754-41f1-a1f8-6dd7634f33f0"
												},
												{
													"key": "domainName",
													"value": "veniam elit in",
													"description": "(Required) Pass the existing domain that needs to be updated",
													"uuid": "cc64f5b0-0e8f-4ee7-b900-452f997ec20e"
												}
											]
										}
									},
									"response": [
										{
											"name": "reseller's child domain updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Delete the sender domain of the reseller child based on the childIdentifier and domainName passed",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "a6cf85e8-12d4-4aec-b657-1f73d70dc3dd"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains",
												":domainName"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "dbbbdc68-d2bd-45a5-bf66-e9be142c9303"
												},
												{
													"key": "domainName",
													"value": "veniam elit in",
													"description": "(Required) Pass the existing domain that needs to be deleted",
													"uuid": "99c4e3a0-b8c7-465b-803c-4fe550d776a2"
												}
											]
										}
									},
									"response": [
										{
											"name": "child domain deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Child accounts",
							"item": [
								{
									"name": "Get the list of all children accounts",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "6ebfaa00-b878-48b8-8319-ca6330a56ca5"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"description": "Number of documents for child accounts information per page",
													"disabled": true
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Index of the first document in the page",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"name": "list of children",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"children\": [\n    {\n      \"email\": \"john.smith@example.com\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"companyName\": \"MyCompany\",\n      \"credits\": {\n        \"emailCredits\": 98555,\n        \"smsCredits\": 87556\n      },\n      \"statistics\": {\n        \"previousMonthTotalSent\": 7654,\n        \"currentMonthTotalSent\": 4566,\n        \"totalSent\": 987554\n      },\n      \"password\": \"abC0xxxxxx3jkL\",\n      \"ips\": [\n        \"176.2.39.4\",\n        \"231.43.21.7\"\n      ],\n      \"apiKeys\": {\n        \"v2\": [\n          {\n            \"name\": \"N˚2\",\n            \"key\": \"nOpxxxxxy7z\"\n          }\n        ],\n        \"v3\": [\n          {\n            \"name\": \"N˚3\",\n            \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n          }\n        ]\n      },\n      \"id\": 187588\n    },\n    {\n      \"email\": \"alex.pain@example.com\",\n      \"firstName\": \"Alex\",\n      \"lastName\": \"Pain\",\n      \"companyName\": \"MyStore\",\n      \"credits\": {\n        \"emailCredits\": 2000,\n        \"smsCredits\": 0\n      },\n      \"statistics\": {\n        \"previousMonthTotalSent\": 654,\n        \"currentMonthTotalSent\": 300,\n        \"totalSent\": 6553\n      },\n      \"password\": \"abC0xxxxx64kL\",\n      \"ips\": [\n        \"176.2.39.4\",\n        \"231.43.21.7\"\n      ],\n      \"apiKeys\": {\n        \"v2\": [\n          {\n            \"name\": \"N˚2\",\n            \"key\": \"nOpxxxxxy7z\"\n          }\n        ],\n        \"v3\": [\n          {\n            \"name\": \"N˚3\",\n            \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n          }\n        ]\n      },\n      \"id\": 187669\n    }\n  ]\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Creates a reseller child",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"uuid": "6c56bd10-e6f3-4bb3-b1dc-481f8234b834"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "8bd0d5a3-6518-4536-a6b6-9e847f0e2a61"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"MyCompany\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa5w0rd65\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children"
											]
										}
									},
									"response": [
										{
											"name": "child created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authKey\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\",\n  \"id\": 1234567\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get a child account's details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "56b779d0-7b26-49ba-8a42-0e264a507573"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "bd4f9a91-9cff-4f93-b352-560843b3d24c"
												}
											]
										}
									},
									"response": [
										{
											"name": "Information for the child",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"email\": \"john.smith@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"companyName\": \"MyCompany\",\n  \"credits\": {\n    \"emailCredits\": 98555,\n    \"smsCredits\": 87556\n  },\n  \"statistics\": {\n    \"previousMonthTotalSent\": 7654,\n    \"currentMonthTotalSent\": 4566,\n    \"totalSent\": 987554\n  },\n  \"password\": \"abC0xxxxx3jkL\",\n  \"ips\": [\n    \"176.2.39.4\",\n    \"231.43.21.7\"\n  ],\n  \"apiKeys\": {\n    \"v2\": [\n      {\n        \"name\": \"N˚2\",\n        \"key\": \"nOpxxxxxy7z\"\n      }\n    ],\n    \"v3\": [\n      {\n        \"name\": \"N˚3\",\n        \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n      }\n    ]\n  }\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get the status of a reseller's child account creation, whether it is successfully created (exists) or not based on the childIdentifier supplied",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "ec8ebc81-91e3-48df-9acb-393e83cbb034"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"accountCreationStatus"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "957d1639-f7b5-407e-b329-e0a09e7f1e20"
												}
											]
										}
									},
									"response": [
										{
											"name": "status of reseller's child account",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"childAccountCreated\": true\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update info of reseller's child based on the child identifier supplied",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"uuid": "a8200bfc-5ce7-48cb-8792-90b636962a88"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "5ef0346e-d11f-464b-aa5d-3e1d9a9b5188"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "0c356ad3-bc46-4daf-bc56-e01417d1a04e"
												}
											]
										}
									},
									"response": [
										{
											"name": "reseller's child updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Delete a single reseller child based on the child identifier supplied",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "6a95ef59-bba8-464c-9189-cf1c5422a8c3"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or child id of reseller's child",
													"uuid": "f0497a12-5291-4cbd-89ae-a83c9c0ce181"
												}
											]
										}
									},
									"response": [
										{
											"name": "child deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update info of reseller's child account status based on the identifier supplied",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"uuid": "1966c361-988c-430a-aeda-1e2196477a81"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "3aecdf0e-fcda-41cc-a31c-ae8b415c10fc"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"accountStatus"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "f7f511e4-0660-4ea4-b5c0-7cf45062d985"
												}
											]
										}
									},
									"response": [
										{
											"name": "reseller's child account status updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get session token to access Sendinblue (SSO)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"uuid": "74c6bcee-fa74-4bd6-ae2d-ff14f07b9b0c"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"auth"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "veniam elit in",
													"description": "(Required) Either auth key or id of reseller's child",
													"uuid": "0f22b31f-2448-43d8-9660-4537fbeb5d3e"
												}
											]
										},
										"description": "It returns a session [token] which will remain valid for a short period of time. A child account will be able to access a white-labeled section by using the following url pattern => https:/email.mydomain.com/login/sso?token=[token]"
									},
									"response": [
										{
											"name": "Session token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"token\": \"5cadaxxxxxxxxxxxxxxxxxxxx5a179f85a0\"\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Process",
					"item": [
						{
							"name": "Return all the processes for your account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.processes);\r",
											"console.log(jsonData.count);\r",
											"console.log(jsonData.processes[0].id);\r",
											"console.log(jsonData.processes[0].status);\r",
											"console.log(jsonData.processes[0].name);\r",
											"\r",
											"// Verify the processes[0] id\r",
											"pm.test(\"Verify the proccess[0] id\", function () {\r",
											"    pm.expect(jsonData.processes[0].id).to.eql(3);\r",
											"});\r",
											"// Verify the processes[0] status\r",
											"pm.test(\"Verify the processes[0] status\", function () {\r",
											"    pm.expect(jsonData.processes[0].status).to.eql(\"queued\");\r",
											"});\r",
											"// Verify the processes[0] name\r",
											"pm.test(\"Verify the processes[0] name\", function () {\r",
											"    pm.expect(jsonData.processes[0].name).to.eql(\"TRANS-GLOBAL-CALC\");\r",
											"});\r",
											"// Verify the total count\r",
											"pm.test(\"Verify the total count\", function () {\r",
											"    pm.expect(jsonData.count).to.eql(3);\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"\r",
											"// Verify that Response time is less than 500ms\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "124c69a8-f43e-4136-9202-25c53d0f87ef"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number limitation for the result returned"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from."
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed"
										}
									]
								}
							},
							"response": [
								{
									"name": "processes informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processes\": [\n    {\n      \"id\": 40,\n      \"status\": \"completed\",\n      \"name\": \"TRANS-CALC\"\n    },\n    {\n      \"id\": 43,\n      \"status\": \"queued\",\n      \"name\": \"TRANS-GLOBAL-CALC\"\n    },\n    {\n      \"id\": 194,\n      \"status\": \"completed\",\n      \"name\": \"SEARCH_EXPORT_USERS\",\n      \"export_url\": \"<a href=\\\"https://export-url.com/upload/file-name.csv\\\" target=\\\"_blank\\\">filename.csv</a>\"\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Return the informations for a process",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"console.log(jsonData.status);\r",
											"console.log(jsonData.name);\r",
											"\r",
											"// Verify the proccess id\r",
											"pm.test(\"Verify the proccess id\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(2);\r",
											"});\r",
											"// Verify the proccess status\r",
											"pm.test(\"Verify the proccess status\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"queued\");\r",
											"});\r",
											"// Verify the proccess name\r",
											"pm.test(\"Verify the proccess name\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(\"TRANS-GLOBAL-CALC\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Verify that Content-Encoding is present in headers\r",
											"pm.test(\"Content-Encoding is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Encoding\");\r",
											"});\r",
											"\r",
											"// Verify that Response time is less than 500ms\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "ffea23b7-f01e-4340-a8a4-b1722e8a1ce8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/processes/:processId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes",
										":processId"
									],
									"variable": [
										{
											"key": "processId",
											"value": "2",
											"description": "(Required) Id of the process",
											"uuid": "7d037902-08c8-48f1-b760-596e666c6ebb"
										}
									]
								}
							},
							"response": [
								{
									"name": "process informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 194,\n  \"status\": \"completed\",\n  \"name\": \"SEARCH_EXPORT_USERS\",\n  \"export_url\": \"<a href=\\\"https://export-url.com/upload/file-name.csv\\\" target=\\\"_blank\\\">filename.csv</a>\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Process ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"processId is invalid\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Corporate",
					"item": [
						{
							"name": "Get the details of requested master account",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "e256e83b-54df-4b5d-8ca1-502bb8a8d692"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/masterAccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"masterAccount"
									]
								},
								"description": "This endpoint will provide the details of the master account."
							},
							"response": [
								{
									"name": "Master account details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/masterAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"masterAccount"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"sample@example.com\",\n  \"companyName\": \"Corp Sample 1-1\",\n  \"id\": 1003286,\n  \"currencyCode\": \"INR\",\n  \"timezone\": \"Europe/Paris\",\n  \"billingInfo\": {\n    \"email\": \"sample@example.com\",\n    \"companyName\": \"Corp Sample 1-1\",\n    \"name\": {\n      \"givenName\": \"Uday\",\n      \"familyName\": \"Pandit\"\n    },\n    \"address\": {\n      \"streetAddress\": \"C-92\",\n      \"locality\": \"Pandav Nagar, New Delhi\",\n      \"postalCode\": \"560048\",\n      \"stateCode\": \"UP\",\n      \"countryCode\": \"IN\"\n    }\n  },\n  \"planInfo\": {\n    \"currencyCode\": \"INR\",\n    \"nextBillingAt\": 1637739295,\n    \"price\": 2100,\n    \"planPeriod\": \"month\",\n    \"subAccounts\": 15,\n    \"features\": [\n      {\n        \"name\": \"MULTI_USER\",\n        \"unitValue\": 1,\n        \"quantity\": 10,\n        \"used\": 15,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"ADVANCED_REPORTING\",\n        \"unitValue\": 1,\n        \"quantity\": 12,\n        \"used\": 1,\n        \"remaining\": 11\n      },\n      {\n        \"name\": \"INBOX\",\n        \"unitValue\": 1,\n        \"quantity\": 10,\n        \"used\": 10,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"LANDING_PAGE\",\n        \"unitValue\": 5,\n        \"quantity\": 10,\n        \"used\": 11,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"RECURRING_CREDITS\",\n        \"unitValue\": 1,\n        \"quantity\": 500,\n        \"used\": 1,\n        \"remaining\": 499\n      }\n    ]\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/masterAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"masterAccount"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the list of all the sub-accounts of the master account.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "1f298cb0-154a-40ff-b4e5-c6d5641e5c11"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount"
									],
									"query": [
										{
											"key": "offset",
											"value": "-41398727",
											"description": "(Required) Index of the first sub-account in the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "-41398727",
											"description": "(Required) Number of sub-accounts to be displayed on each page",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will provide the list all the sub-accounts of the master account."
							},
							"response": [
								{
									"name": "Sub-accounts list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount?offset=-41398727&limit=-41398727",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											],
											"query": [
												{
													"key": "offset",
													"value": "-41398727"
												},
												{
													"key": "limit",
													"value": "-41398727"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 3,\n  \"subAccounts\": [\n    {\n      \"id\": 4043629,\n      \"companyName\": \"Company1\",\n      \"active\": \"true,\",\n      \"createdAt\": 1631523176\n    },\n    {\n      \"id\": 3984002,\n      \"companyName\": \"Company2\",\n      \"active\": true,\n      \"createdAt\": 1629439311\n    },\n    {\n      \"id\": 3524191,\n      \"companyName\": \"Company3\",\n      \"active\": true,\n      \"createdAt\": 1614713641\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount?offset=-41398727&limit=-41398727",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											],
											"query": [
												{
													"key": "offset",
													"value": "-41398727"
												},
												{
													"key": "limit",
													"value": "-41398727"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a new sub-account under a master account.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "d9a192f5-fad0-4f92-8704-05907186e9ce"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "6a881a0e-9040-4491-ac2b-9bfeb30aff8c"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount"
									]
								},
								"description": "This endpoint will create a new sub-account under a master account"
							},
							"response": [
								{
									"name": "Created sub-account ID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 4109344\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"missing_parameter\",\n  \"message\": \"Missing companyName attribute in the request\"\n}"
								}
							]
						},
						{
							"name": "Generate SSO token to access Sendinblue",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "a5e43ba6-ff92-457b-8c6b-d032492c05f0"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "e897daf4-4130-4d16-893f-d7d6bad21712"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										"ssoToken"
									]
								},
								"description": "This endpoint generates an sso token to authenticate and access a sub-account of the master using the account endpoint https://app.sendinblue.com/account/login/sub-account/sso/[token], where [token] will be replaced by the actual token."
							},
							"response": [
								{
									"name": "Session token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												"ssoToken"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"token\": \"5cadaxxxxxxxxxxxxxxxxxxxx5a179f85a0\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												"ssoToken"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"Invalid sub-account id.\"\n}"
								},
								{
									"name": "Current account is not a master account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												"ssoToken"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"permission_denied\",\n  \"message\": \"Access forbidden.\"\n}"
								}
							]
						},
						{
							"name": "Get sub-account details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "048b61a6-b774-4946-a0b1-9f3199f0e6be"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "13396752",
											"description": "(Required) Id of the sub-account organization",
											"uuid": "45562af1-559a-43e2-a6b8-f709bfe536ae"
										}
									]
								},
								"description": "This endpoint will provide the details for the specified sub-account company"
							},
							"response": [
								{
									"name": "Sub-account organization details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"Uday Pandit\",\n  \"email\": \"uday+1@sendinblue.com\",\n  \"companyName\": \"API-Sub-26thOct21-4\",\n  \"planInfo\": {\n    \"credits\": {\n      \"sms\": 1234,\n      \"emails\": {\n        \"quantity\": 2000,\n        \"remaining\": 1955\n      },\n      \"features\": {\n        \"inbox\": {\n          \"quantity\": 20,\n          \"remaining\": 12\n        },\n        \"landingPage\": {\n          \"quantity\": 25,\n          \"remaining\": 14\n        },\n        \"users\": {\n          \"quantity\": 30,\n          \"remaining\": 14\n        }\n      },\n      \"planType\": \"paid\"\n    }\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a sub-account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "924620b9-fa3d-4626-b780-ee4179fee8f4"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "13396752",
											"description": "(Required) Id of the sub-account organization to be deleted",
											"uuid": "fd3e452f-8143-4b2d-b355-8c214182ec7d"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when sub-account is deleted succesfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"missing_parameter\",\n  \"message\": \"Sub-account 2039dfsddf885 is not valid\"\n}"
								},
								{
									"name": "sub-account not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"document_not_found\",\n  \"message\": \"Sub-account 2039885 was not found\"\n}"
								}
							]
						},
						{
							"name": "Update sub-account plan",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "218b110f-58ac-404c-9d7c-43351669a953"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "5e301770-1e25-46a4-b2c6-785475be60db"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id",
										"plan"
									],
									"variable": [
										{
											"key": "id",
											"value": "13396752",
											"description": "(Required) Id of the sub-account organization",
											"uuid": "c46e3e44-b3ce-4663-a59f-bc17547f5322"
										}
									]
								},
								"description": "This endpoint will update the sub-account plan"
							},
							"response": [
								{
									"name": "Sub account plan updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Current account is not a master account",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"permission_denied\",\n  \"message\": \"Access forbidden.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Account data",
					"item": [
						{
							"name": "Get your account information, plan and credits details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test that response includes account holder's first name\r",
											"pm.test(\"Body matches string Amber\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Amber\");\r",
											"});\r",
											"// Test that response includes account holder's last name\r",
											"pm.test(\"Body matches string Ozenogu\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Ozenogu\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.email);\r",
											"console.log(jsonData.firstName);\r",
											"console.log(jsonData.lastName);\r",
											"console.log(jsonData.companyName);\r",
											"\r",
											"// Verify the user's email address\r",
											"pm.test(\"Verify the email address\", function () {\r",
											"    pm.expect(jsonData.email).to.eql(\"ozenoguamber@gmail.com\");\r",
											"});\r",
											"\r",
											"// Verify the user's first name\r",
											"pm.test(\"Verify the first name\", function () {\r",
											"    pm.expect(jsonData.firstName).to.eql(\"Amber\");\r",
											"});\r",
											"\r",
											"// Verify the user's last name\r",
											"pm.test(\"Verify the last name\", function () {\r",
											"    pm.expect(jsonData.lastName).to.eql(\"Ozenogu\");\r",
											"});\r",
											"\r",
											"// Verify the user's company name\r",
											"pm.test(\"Verify the company name\", function () {\r",
											"    pm.expect(jsonData.companyName).to.eql(\"Testify Academy\");\r",
											"});\r",
											" \r",
											"// Test that header includes Content-Type key\r",
											"pm.test(\"Content-Type is present in header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"// Test that header includes Server key\r",
											"pm.test(\"Server is present in header\", function () {\r",
											"    pm.response.to.have.header(\"Server\");\r",
											"});\r",
											"\r",
											"// Verify that Response time is less than 500ms\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "908114d2-b086-4cba-8d56-0191561c9a8d"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": [
								{
									"name": "account informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"plan\": [\n    {\n      \"type\": \"payAsYouGo\",\n      \"credits\": 5000,\n      \"creditsType\": \"sendLimit\"\n    },\n    {\n      \"type\": \"subscription\",\n      \"credits\": 39983,\n      \"creditsType\": \"sendLimit\",\n      \"startDate\": \"2017-03-11T00:00:00.000Z\",\n      \"endDate\": \"2017-04-11T00:00:00.000Z\"\n    },\n    {\n      \"type\": \"sms\",\n      \"credits\": 999.5360000000001,\n      \"creditsType\": \"sendLimit\"\n    }\n  ],\n  \"relay\": {\n    \"enabled\": true,\n    \"data\": {\n      \"userName\": \"john.smith@example.com\",\n      \"relay\": \"smtp-relay.domain.com\",\n      \"port\": 587\n    }\n  },\n  \"marketingAutomation\": {\n    \"key\": \"kzfr5xxxxxxttuyo1\",\n    \"enabled\": true\n  },\n  \"email\": \"john.smith@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"companyName\": \"MyShop\",\n  \"address\": {\n    \"city\": \"New-York\",\n    \"street\": \"1677B 8th Avenue\",\n    \"zipCode\": \"7665\",\n    \"country\": \"USA\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Senders",
					"item": [
						{
							"name": "Create a new sender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.id);\r",
											"\r",
											"pm.environment.set(\"senderId\", jsonData.id);\r",
											"\r",
											"// Verify the body response includes id string\r",
											"pm.test(\"Body matches id string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"});\r",
											"\r",
											"// Verify the body response includes spfError string\r",
											"pm.test(\"Body matches spfError string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"spfError\");\r",
											"});\r",
											"\r",
											"// Verify the body response includes dkimError string\r",
											"pm.test(\"Body matches dkimError string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"dkimError\");\r",
											"});\r",
											"\r",
											"// Verify that Response time is less than 500ms\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "8f8001f0-9cc4-42fe-ae13-f9329c213db0"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "04e8a5fd-4784-4215-9460-d6e3523f81e6"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{$randomEmail}}\",\n  \"name\": \"{{$randomCompanyName}}\",\n  \"ips\": [\n    {\n      \"domain\": \"{{$randomDomainName}}\",\n      \"ip\": \"{{$randomIP}}\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"{{$randomDomainName}}\",\n      \"ip\": \"{{$randomIP}}\",\n      \"weight\": 50\n    }\n  ],\n  \"isActive\": true\n}\n/* newsletter@mycompany.com\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50 */",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/senders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders"
									]
								}
							},
							"response": [
								{
									"name": "sender created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5,\n  \"spfError\": true,\n  \"dkimError\": false\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the list of all your senders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"console.log(jsonData.senders);\r",
											"console.log(jsonData.senders[0].id);\r",
											"\r",
											"// Verify the id of the first sender\r",
											"pm.test(\"Verify the id of the first sender\", function () {\r",
											"    pm.expect(jsonData.senders[0].id).to.eql(1);\r",
											"});\r",
											"\r",
											"// Verify that body response includes Newsletter string\r",
											"pm.test(\"Body matches string Newsletter\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Newsletter\");\r",
											"});\r",
											"// Verify that body response includes Wiza Inc string\r",
											"pm.test(\"Body matches string Wiza Inc\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Wiza Inc\");\r",
											"});\r",
											"// Verify that body response includes active string\r",
											"pm.test(\"Verify that body response includes active string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"active\");\r",
											"});\r",
											"// Verify that body response includes ips string\r",
											"pm.test(\"Verify that body response includes ips string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ips\");\r",
											"});\r",
											"\r",
											"// Verify that CF-RAY is present in header\r",
											"pm.test(\"CF-RAY is present\", function () {\r",
											"    pm.response.to.have.header(\"CF-RAY\");\r",
											"});\r",
											"// Verify that CF-Cache-Status is present in header\r",
											"pm.test(\"CF-Cache-Status is present\", function () {\r",
											"    pm.response.to.have.header(\"CF-Cache-Status\");\r",
											"});\r",
											"\r",
											"// Verify that Response time is less than 500ms\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "cbeec477-1a6a-4689-8d21-72cd59811d21"
									},
									{
										"key": "X-Include-Ips",
										"value": "true",
										"type": "text",
										"uuid": "e0a79317-3af7-41e8-9543-c12205566766"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders"
									],
									"query": [
										{
											"key": "ip",
											"value": "192.168.8.138",
											"description": "Filter your senders for a specific ip. **Available for dedicated IP usage only**\n",
											"disabled": true
										},
										{
											"key": "domain",
											"value": "mycompany.com",
											"description": "Filter your senders for a specific domain",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "list of senders",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders?ip=veniam elit in&domain=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											],
											"query": [
												{
													"key": "ip",
													"value": "veniam elit in"
												},
												{
													"key": "domain",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"senders\": [\n    {\n      \"id\": 1,\n      \"name\": \"Marketing\",\n      \"email\": \"marketing@mycompany.com\",\n      \"active\": true,\n      \"ips\": [\n        {\n          \"ip\": \"123.98.689.7\",\n          \"domain\": \"mycompany.com\",\n          \"weight\": 100\n        }\n      ]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Newsletter\",\n      \"email\": \"newsletter@mycompany.com\",\n      \"active\": false,\n      \"ips\": [\n        {\n          \"ip\": \"123.98.689.7\",\n          \"domain\": \"mycompany.com\",\n          \"weight\": 50\n        },\n        {\n          \"ip\": \"123.98.643.2\",\n          \"domain\": \"news.mycompany.com\",\n          \"weight\": 50\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders?ip=veniam elit in&domain=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											],
											"query": [
												{
													"key": "ip",
													"value": "veniam elit in"
												},
												{
													"key": "domain",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all the dedicated IPs for your account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that response returns ips\r",
											"pm.test(\"Body matches ips string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ips\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "af42da98-84d6-4502-b877-fcc15e8f17a8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										"ips"
									]
								}
							},
							"response": [
								{
									"name": "list of dedicated IPs",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												"ips"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"ips\": [\n    {\n      \"id\": 3,\n      \"ip\": \"67.145.89.3\",\n      \"active\": true,\n      \"domain\": \"mailing.myshop.com\"\n    },\n    {\n      \"id\": 5,\n      \"ip\": \"76.76.125.9\",\n      \"active\": true,\n      \"domain\": \"newsletter.myshop.com\"\n    },\n    {\n      \"id\": 6,\n      \"ip\": \"123.65.8.22\",\n      \"active\": false,\n      \"domain\": \"notifications.myshop.com\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get all the dedicated IPs for a sender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"// Verify that response returns ips\r",
											"pm.test(\"Body matches ips string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ips\");\r",
											"});\r",
											"\r",
											"// Verify that Content-Type is present in headers\r",
											"pm.test(\"Content-Type is present in headers\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "4a785c9f-07dd-476f-9b66-fa337b060f62"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId/ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId",
										"ips"
									],
									"variable": [
										{
											"key": "senderId",
											"value": "1",
											"description": "(Required) Id of the sender",
											"uuid": "6fd2fc59-7bfb-4186-8ab1-e523fa6538f9"
										}
									]
								}
							},
							"response": [
								{
									"name": "list of dedicated IPs",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"ips\": [\n    {\n      \"id\": 3,\n      \"ip\": \"123.65.8.22\",\n      \"domain\": \"mailing.myshop.dom\",\n      \"weight\": 40\n    },\n    {\n      \"id\": 5,\n      \"ip\": \"123.43.21.3\",\n      \"domain\": \"newsletter.myshop.dom\",\n      \"weight\": 60\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a sender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "0d0f299d-2070-48a7-b470-378ea4388fa2"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "db906337-dd02-47f9-834a-fd1416ff6b33"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{$randomFirstName}}\",\n  \"email\": \"{{$randomFirstName}}@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"124.98.679.6\",\n      \"weight\": 100\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId"
									],
									"variable": [
										{
											"key": "senderId",
											"value": "{{senderId}}",
											"description": "(Required) Id of the sender",
											"uuid": "47ec9057-b194-4a13-b4b6-608bc1760369"
										}
									]
								}
							},
							"response": [
								{
									"name": "sender updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a sender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Verify that request returns an empty response\r",
											"pm.test(\"Empty body response\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});\r",
											"\r",
											"// Verify the Status code and string\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.test(\"Status code name has a No Content string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"uuid": "23570837-7ceb-4c25-8a6b-40931c96646d"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId"
									],
									"variable": [
										{
											"key": "senderId",
											"value": "{{senderId}}",
											"description": "(Required) Id of the sender",
											"uuid": "116efaf4-26a9-44d7-98a8-84668ec9321d"
										}
									]
								}
							},
							"response": [
								{
									"name": "sender deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{myAPIKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			},
			{
				"key": "key",
				"value": "api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.brevo.com/v3",
			"type": "string"
		}
	]
}